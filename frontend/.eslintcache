[{"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\index.js":"1","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\App.js":"3","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\coa.js":"4","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\coa_type.js":"5","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js":"6","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\notes.js":"7","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\employees.js":"8","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\projects.js":"9","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\MyAppBar.js":"10","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\schedule.js":"11","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\stock.js":"12","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\vouchers.js":"13","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\users.js":"14","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\units.js":"15","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js":"16","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\CustomMenu.js":"17","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\customRoutes.js":"18","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\booking.js":"19","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js":"20","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\suppliers.js":"21","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\purchaseorders.js":"22","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Logo.js":"23","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js":"24","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherShow.js":"25","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\charts\\DummyChart.js":"26","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\charts\\VouchersChart.js":"27","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\Accounts.js":"28","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js":"29","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\Purchases.js":"30","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js":"31","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js":"32","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingShow.js":"33","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js":"34","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js":"35","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\sales\\Sales.js":"36","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js":"37","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js":"38","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingPrint.js":"39","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Fprop.js":"40","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\POPrint.js":"41"},{"size":517,"mtime":1609137296925,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1609137296926,"results":"44","hashOfConfig":"43"},{"size":10446,"mtime":1611050676834,"results":"45","hashOfConfig":"43"},{"size":3613,"mtime":1610967503893,"results":"46","hashOfConfig":"43"},{"size":2581,"mtime":1610105721231,"results":"47","hashOfConfig":"43"},{"size":775,"mtime":1610028291028,"results":"48","hashOfConfig":"43"},{"size":3322,"mtime":1610105682743,"results":"49","hashOfConfig":"43"},{"size":5266,"mtime":1610180567446,"results":"50","hashOfConfig":"43"},{"size":5524,"mtime":1610188393391,"results":"51","hashOfConfig":"43"},{"size":1248,"mtime":1609597891526,"results":"52","hashOfConfig":"43"},{"size":10770,"mtime":1610355377408,"results":"53","hashOfConfig":"43"},{"size":4662,"mtime":1610180567466,"results":"54","hashOfConfig":"43"},{"size":4930,"mtime":1611049133287,"results":"55","hashOfConfig":"43"},{"size":606,"mtime":1609597891555,"results":"56","hashOfConfig":"43"},{"size":5073,"mtime":1610193255217,"results":"57","hashOfConfig":"43"},{"size":1374,"mtime":1609597891558,"results":"58","hashOfConfig":"43"},{"size":2862,"mtime":1610964508437,"results":"59","hashOfConfig":"43"},{"size":691,"mtime":1610964508442,"results":"60","hashOfConfig":"43"},{"size":5459,"mtime":1610964508442,"results":"61","hashOfConfig":"43"},{"size":3638,"mtime":1610964508440,"results":"62","hashOfConfig":"43"},{"size":7365,"mtime":1610964508445,"results":"63","hashOfConfig":"43"},{"size":12867,"mtime":1611049133280,"results":"64","hashOfConfig":"43"},{"size":311,"mtime":1609597891525,"results":"65","hashOfConfig":"43"},{"size":1270,"mtime":1610355377404,"results":"66","hashOfConfig":"43"},{"size":1355,"mtime":1610964469365,"results":"67","hashOfConfig":"43"},{"size":1545,"mtime":1609597891537,"results":"68","hashOfConfig":"43"},{"size":1590,"mtime":1610180567439,"results":"69","hashOfConfig":"43"},{"size":4811,"mtime":1610180567423,"results":"70","hashOfConfig":"43"},{"size":15137,"mtime":1610964508438,"results":"71","hashOfConfig":"43"},{"size":2562,"mtime":1610964508443,"results":"72","hashOfConfig":"43"},{"size":9939,"mtime":1610964508438,"results":"73","hashOfConfig":"43"},{"size":8815,"mtime":1610964508439,"results":"74","hashOfConfig":"43"},{"size":1462,"mtime":1610964508440,"results":"75","hashOfConfig":"43"},{"size":9255,"mtime":1610964508441,"results":"76","hashOfConfig":"43"},{"size":945,"mtime":1611049133273,"results":"77","hashOfConfig":"43"},{"size":2754,"mtime":1610964508446,"results":"78","hashOfConfig":"43"},{"size":11251,"mtime":1610634381078,"results":"79","hashOfConfig":"43"},{"size":940,"mtime":1610634381060,"results":"80","hashOfConfig":"43"},{"size":13693,"mtime":1610964508440,"results":"81","hashOfConfig":"43"},{"size":3315,"mtime":1611049988791,"results":"82","hashOfConfig":"43"},{"size":11589,"mtime":1611049133265,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1xyxir7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\index.js",[],["188","189"],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\App.js",["190","191","192"],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\coa.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\coa_type.js",["193","194"],"import { useMediaQuery } from '@material-ui/core';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport * as React from \"react\";\r\nimport { Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar } from 'react-admin';\r\n\r\nexport const Coa_typeIcon = FormatListNumberedIcon;\r\n\r\nexport const Coa_typeActions = ({ basePath, data }) => (\r\n    <TopToolbar>\r\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n        {/* <ShowButton basePath={basePath} record={data} /> */}\r\n    </TopToolbar>\r\n);\r\n\r\nconst Coa_typeSearchFilter = (props) => (\r\n\r\n    <Filter {...props}>\r\n        <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n        <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n        <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n    </Filter>\r\n\r\n);\r\n\r\nexport const Coa_typeList = props => (\r\n    <List filters={<Coa_typeSearchFilter />} {...props}>\r\n        {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n            <SimpleList\r\n                primaryText={record => record.title}\r\n                secondaryText={record => `${record.code}`}\r\n                tertiaryText={record => record.id}\r\n\r\n            />\r\n        ) : (\r\n                <Datagrid rowClick=\"edit\">\r\n                    <TextField source=\"id\" />\r\n                    <TextField source=\"code\" />\r\n                    <TextField source=\"title\" />\r\n                    <EditButton variant=\"contained\" color=\"secondary\" />\r\n                    <DeleteButton />\r\n                </Datagrid>)}\r\n    </List>\r\n);\r\n\r\nconst Coa_typeTitle = ({ record }) => {\r\n    return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const Coa_typeEdit = (props) => (\r\n    <Edit undoable={false}  title={<Coa_typeTitle />} {...props}>\r\n        <SimpleForm variant=\"standard\" margin=\"none\"    >\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput multiline source=\"title\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const Coa_typeCreate = (props) => (\r\n    <Create  title=\"New Coa_type\" {...props}>\r\n        <SimpleForm variant=\"standard\">\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput multiline source=\"title\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js",["195"],"import { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport * as React from \"react\";\r\nimport { Title } from 'react-admin';\r\nimport DummyChart from './charts/DummyChart';\r\nimport VouchersChart from './charts/VouchersChart';\r\n\r\n\r\nexport default () => (\r\n    <Card style={{ height: '100%' }}>\r\n        <Title title=\"Welcome to the Firdous ERP\" />\r\n        <CardContent>\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} md={6}>\r\n                    <DummyChart />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <VouchersChart />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\notes.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\employees.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\projects.js",["196","197","198"],"import { Grid, useMediaQuery } from '@material-ui/core';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport * as React from \"react\";\r\nimport { BooleanInput, Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar, useNotify, useRedirect, useRefresh } from 'react-admin';\r\n\r\nexport const ProjectIcon = ApartmentIcon;\r\n\r\nexport const ProjectActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\n\r\nconst ProjectSearchFilter = (props) => (\r\n\r\n  <Filter {...props}>\r\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n\r\n);\r\n\r\nexport const ProjectList = props => (\r\n  <List filters={<ProjectSearchFilter />} {...props}>\r\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={record => record.title}\r\n        secondaryText={record => `${record.code}`}\r\n        tertiaryText={record => record.id}\r\n\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"code\" />\r\n          <TextField source=\"scode\" />\r\n          <TextField source=\"title\" />\r\n          <TextField source=\"location\" />\r\n          <TextField source=\"nature\" />\r\n          <TextField source=\"remarks\" />\r\n          <TextField source=\"active\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n          <DeleteButton />\r\n        </Datagrid>)}\r\n  </List>\r\n);\r\n\r\nconst ProjectTitle = ({ record }) => {\r\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const ProjectEdit = (props) => (\r\n  <Edit undoable={false} title={<ProjectTitle />} {...props}>\r\n\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"location\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"client\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cost\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"country\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"nature\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"remarks\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </SimpleForm>\r\n\r\n  </Edit>\r\n);\r\n\r\nexport const ProjectCreate = (props) => {\r\n\r\n  const notify = useNotify();\r\n  const refresh = useRefresh();\r\n  const redirect = useRedirect();\r\n  const onFailure = (error) => {\r\n\r\n\r\n    notify(`Could not edit post: ${error}`)\r\n  };\r\n\r\n  return (\r\n    <Create title=\"New Project\" {...props}>\r\n      <SimpleForm\r\n        variant={\"standard\"}\r\n        sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n      >\r\n        <Grid container display=\"flex\" fullWidth spacing={1}>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput disabled source=\"id\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput disabled source=\"code\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"scode\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput multiline source=\"title\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"location\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"city\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"client\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"cost\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"country\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"nature\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"remarks\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <BooleanInput source=\"active\" fullWidth />\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n};","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\MyAppBar.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\schedule.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\stock.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\vouchers.js",["199","200"],"import { useMediaQuery } from \"@material-ui/core\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DateInput,\r\n  Edit,\r\n  EditButton,\r\n  Filter,\r\n  List,\r\n  ListButton,\r\n  Pagination,\r\n  SearchInput,\r\n  SimpleList,\r\n  TextField,\r\n  TopToolbar,\r\n} from \"react-admin\";\r\nimport { useLocation } from \"react-router\";\r\nimport FirdousSelect from \"./accounts/FirdousSelect\";\r\nimport { VoucherEntryForm } from \"./accounts/VoucherEntry3\";\r\nimport VoucherShow from \"./accounts/VoucherShow\";\r\n\r\nexport const useQuery = (queryParam) => {\r\n  const search = new URLSearchParams(useLocation().search);\r\n  return search.get(queryParam);\r\n};\r\n\r\nexport const VouchersIcon = StoreIcon;\r\n\r\nexport const VouchersActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nconst VouchersSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher-No\"\r\n      source=\"vou_no\"\r\n      alwaysOn\r\n    />\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher Date\"\r\n      source=\"vou_date\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Chq-No\"\r\n      source=\"chq_no\"\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Project\"\r\n      source=\"project\"\r\n      optionText=\"title\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Vendor\"\r\n      source=\"supplier\"\r\n      optionText=\"title\"\r\n      list=\"suppliers\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Units\"\r\n      source=\"unit\"\r\n      optionText=\"title\"\r\n      list=\"units\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Stocks\"\r\n      source=\"stock\"\r\n      optionText=\"title\"\r\n      list=\"stock\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Employees\"\r\n      source=\"employee\"\r\n      optionText=\"title\"\r\n      list=\"employees\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n  </Filter>\r\n);\r\nconst PostPagination = (props) => (\r\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\r\n);\r\n\r\nexport const VouchersList = (props) => (\r\n  <List\r\n    sort={{ field: \"id\", order: \"DESC\" }}\r\n    perPage={25}\r\n    pagination={<PostPagination />}\r\n    empty={false}\r\n    filters={<VouchersSearchFilter />}\r\n    {...props}\r\n  >\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid rowClick=\"edit\">\r\n        <TextField source=\"row_id\" />\r\n        <TextField source=\"vou_no\" />\r\n        <TextField source=\"vou_date\" />\r\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\r\n          <TextField source=\"title\" />\r\n        </ReferenceField> */}\r\n        <TextField source=\"chq_no\" />\r\n        <TextField source=\"chq_date\" />\r\n        <TextField source=\"created_by\" />\r\n        <EditButton variant=\"contained\" color=\"secondary\" />\r\n        {/* <DeleteButton /> */}\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n);\r\n\r\nconst VouchersTitle = ({ record }) => {\r\n  return <span>Voucher {record ? `\"${record.vou_no}\"` : \"\"}</span>;\r\n};\r\nexport const VouchersEdit = (props) => {\r\n  return (\r\n    <Edit\r\n      undoable={false}\r\n      actions={null}\r\n      title={<VouchersTitle />}\r\n      redirect=\"show\"\r\n      {...props}\r\n    >\r\n      <VoucherEntryForm {...props} />\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport const VouchersCreate = (props) => {\r\n  const vou_type = useQuery(\"vou_type\");\r\n  return (\r\n    <Create redirect=\"show\" undoable={false} title=\"New Voucher\" {...props}>\r\n      <VoucherEntryForm vou_type={vou_type} {...props} />\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport const VouchersShow = (props) => {\r\n  return <VoucherShow {...props} />;\r\n};\r\n\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\users.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\units.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\CustomMenu.js",["201","202"],"import { useMediaQuery } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport DefaultIcon from \"@material-ui/icons/ViewList\";\r\nimport * as React from \"react\";\r\nimport { DashboardMenuItem, getResources, MenuItemLink } from \"react-admin\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Menu = ({ onMenuClick, logout }) => {\r\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\r\n  const resources = useSelector(getResources);\r\n  return (\r\n    <div className=\"firdousmenu\">\r\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/accounts\"\r\n        primaryText=\"Accounts\"\r\n        leftIcon={<AccountBalanceWalletIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/purchases\"\r\n        primaryText=\"Purchases\"\r\n        leftIcon={<ShoppingCartIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/sales\"\r\n        primaryText=\"Sales\"\r\n        leftIcon={<AttachMoneyIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n\r\n      {resources.map((resource) => {\r\n        if (resource.options && resource.options.menu === \"false\") {\r\n          //console.log(resource);\r\n          return;\r\n        } else if (resource.hasList) {\r\n          return (\r\n            <div>\r\n              <MenuItemLink\r\n                key={resource.name}\r\n                to={`/${resource.name}`}\r\n                primaryText={\r\n                  (resource.options && resource.options.label) || resource.name\r\n                }\r\n                leftIcon={resource.icon ? <resource.icon /> : <DefaultIcon />}\r\n                onClick={onMenuClick}\r\n                sidebarIsOpen={open}\r\n              />\r\n              <Divider light />\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/custom-route\"\r\n        primaryText=\"Miscellaneous\"\r\n        leftIcon={<LabelIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      <MenuItemLink\r\n        to=\"/help-center\"\r\n        primaryText=\"Settings\"\r\n        leftIcon={<SettingsIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      {isXSmall && logout}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\customRoutes.js",["203"],"import * as React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Accounts from \"./accounts/Accounts\";\r\nimport Purchases from \"./purchases/Purchases\";\r\nimport Sales from \"./sales/Sales\";\r\n\r\nexport default [\r\n  <Route exact path=\"/accounts\" component={Accounts} />,\r\n  <Route exact path=\"/purchases\" component={Purchases} />,\r\n  <Route exact path=\"/sales\" component={Sales} />,\r\n  //<Route exact path=\"/accounts/vouchers/create\" component={VoucherEntry} />,\r\n  //<Route exact path=\"/accounts/voucherentry/:id\" component={VoucherEdit} />,\r\n  //<Route exact path=\"/userform\" component={Userform} />,\r\n  //<Route exact path=\"/bookingform\" component={BookingFormWizard} />,\r\n];\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\booking.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\suppliers.js",["204"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport * as React from \"react\";\r\nimport { BooleanField, BooleanInput, Create, Datagrid, DateField, DeleteButton, Edit, EditButton, Filter, FormTab, List, ListButton, ReferenceManyField, SearchInput, SimpleForm, SimpleList, TabbedForm, TextField, TextInput, TopToolbar } from 'react-admin';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\r\n});\r\n\r\nexport const SupplierActions = ({ basePath, data }) => (\r\n  <TopToolbar variant=\"contained\" >\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} variant=\"contained\" color=\"secondary\" />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nexport const SupplierIcon = TransferWithinAStationIcon;\r\n\r\nconst SupplierSearchFilter = (props) => (\r\n\r\n  <Filter {...props}>\r\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n\r\n);\r\n\r\nexport const SupplierList = (props) => (\r\n  <List undoable={false} filters={<SupplierSearchFilter />} {...props} >\r\n\r\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={record => record.title}\r\n        secondaryText={record => `${record.code}`}\r\n        tertiaryText={record => record.id}\r\n\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"code\" />\r\n          <TextField source=\"scode\" />\r\n          <TextField source=\"title\" />\r\n          <BooleanField source=\"active\" />\r\n          <TextField source=\"nature\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n          <DeleteButton />\r\n        </Datagrid>)}\r\n  </List>\r\n);\r\n\r\nconst SupplierTitle = ({ record }) => {\r\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const SupplierEdit = props => {\r\n  return (\r\n    <Edit undoable={false} title={<SupplierTitle />} {...props}>\r\n\r\n\r\n      <TabbedForm initialValues={{}}\r\n        variant={\"standard\"}\r\n        sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n      >\r\n        <FormTab label=\"Supplier Detail\">\r\n          <Grid container display=\"flex\" fullWidth spacing={1}>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput disabled source=\"id\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput disabled source=\"code\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"scode\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput multiline source=\"title\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"person\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"contact\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"address\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"country\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"city\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"email\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"fax\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"cnic\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"ntn\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"stn\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"businesstitle\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"nature\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <BooleanInput source=\"active\" fullWidth />\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n        </FormTab>\r\n        <FormTab label=\"Purchase Orders\">\r\n          <ReferenceManyField\r\n            reference=\"purchaseorder\"\r\n            target=\"supplier_id\"\r\n            addLabel={false}\r\n            fullWidth\r\n          >\r\n            <Datagrid>\r\n              <TextField source=\"po_no\" />\r\n              <DateField source=\"purchase_date\" />\r\n              <TextField source=\"project_id\" />\r\n              <TextField source=\"status\" />\r\n              <DateField source=\"created_on\" />\r\n              <EditButton />\r\n            </Datagrid>\r\n          </ReferenceManyField>\r\n        </FormTab>\r\n      </TabbedForm>\r\n\r\n\r\n\r\n    </Edit>\r\n  )\r\n};\r\n\r\nexport const SupplierCreate = (props) => (\r\n  <Create title=\"New Suppier\" {...props}>\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"person\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"contact\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"address\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"country\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"email\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"fax\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cnic\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"ntn\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"stn\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"businesstitle\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"nature\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </SimpleForm>\r\n  </Create>\r\n\r\n);","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\purchaseorders.js",["205","206","207","208","209","210"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ArrayInput,\r\n  Button,\r\n  Create,\r\n  Datagrid,\r\n  DateInput,\r\n  DeleteButton,\r\n  Edit,\r\n  EditButton,\r\n  Filter,\r\n  FormDataConsumer,\r\n  FormTab,\r\n  List,\r\n  ListButton,\r\n  NumberInput,\r\n  ReferenceField,\r\n  required,\r\n  SaveButton,\r\n  SearchInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  SimpleList,\r\n  TabbedForm,\r\n  TextField,\r\n  TextInput,\r\n  Toolbar,\r\n  TopToolbar,\r\n  useLocale,\r\n} from \"react-admin\";\r\nimport { useFormState } from \"react-final-form\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport FirdousSelect from \"../accounts/FirdousSelect\";\r\nimport PrintPOComponent from \"./PrintPOComponent\";\r\nexport const Purchase_orderIcon = StoreIcon;\r\nconst useStyles = makeStyles({\r\n  mr1: { marginRight: \"1em\" },\r\n  iteratorinput: {\r\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"18%\" },\r\n  },\r\n  iteratorinput50: {\r\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"15%\" },\r\n  },\r\n  iteratorinputdc: {\r\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"50%\" },\r\n  },\r\n  po_item: {\r\n    \"@media (min-width: 600px)\": {\r\n      border: \"1px solid #ccc\",\r\n      width: \"95%\",\r\n      padding: \"1em\",\r\n      marginTop: \"2em\",\r\n    },\r\n  },\r\n});\r\nexport const Purchase_orderActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\nconst ra_required = [required()];\r\nconst Purchase_orderSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"PO No\"\r\n      source=\"po_no\"\r\n      alwaysOn\r\n    />\r\n    <DateInput\r\n      variant=\"standard\"\r\n      placeholder=\"Purchase Date\"\r\n      source=\"purchase_date\"\r\n      alwaysOn\r\n    />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Project\"\r\n      source=\"project_id\"\r\n      optionText=\"title\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Vendor\"\r\n      source=\"supplier_id\"\r\n      optionText=\"title\"\r\n      list=\"suppliers\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n  </Filter>\r\n);\r\n\r\nexport const Purchase_orderList = (props) => (\r\n  <List empty={false} filters={<Purchase_orderSearchFilter />} {...props}>\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid rowClick=\"edit\">\r\n        <TextField source=\"id\" />\r\n        <TextField source=\"po_no\" />\r\n        <TextField source=\"purchase_date\" />\r\n        <ReferenceField\r\n          label=\"Project\"\r\n          source=\"project_id\"\r\n          reference=\"Projects\"\r\n        >\r\n          <TextField source=\"title\" />\r\n        </ReferenceField>\r\n        <ReferenceField\r\n          label=\"Supplier\"\r\n          source=\"supplier_id\"\r\n          reference=\"suppliers\"\r\n        >\r\n          <TextField source=\"title\" />\r\n        </ReferenceField>\r\n        <ReferenceField label=\"Status\" source=\"status\" reference=\"fprop\">\r\n          <TextField source=\"value\" />\r\n        </ReferenceField>\r\n        <TextField source=\"created_on\" />\r\n        <EditButton variant=\"contained\" color=\"secondary\" />\r\n        <DeleteButton />\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n);\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\n\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\nconst Purchase_orderTitle = ({ record }) => {\r\n  return <span>Order {record ? `\"${record.po_no}\"` : \"\"}</span>;\r\n};\r\n\r\nexport const Purchase_orderEdit = (props) => (\r\n  <Edit undoable={false} title={<Purchase_orderTitle />} {...props}>\r\n    <TabbedForm\r\n      toolbar={<CustomToolbar />}\r\n      initialValues={{}}\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <FormTab label=\"Purchase Order\">\r\n        <PO_FORM />\r\n      </FormTab>\r\n    </TabbedForm>\r\n  </Edit>\r\n);\r\nconst UnitInput = (props) => {\r\n  const { values } = useFormState();\r\n  return (\r\n    <TextInput value={values.stock_id ? values.stock_id : \"\"} {...props} />\r\n  );\r\n};\r\nconst calcSubTotal = (scopedFormData) => {\r\n  if (scopedFormData) {\r\n    const total =\r\n      parseFloat(scopedFormData.unit_price || 0) *\r\n      parseFloat(scopedFormData.qty || 0);\r\n    console.log(\"scope data:\" + JSON.stringify(scopedFormData));\r\n    scopedFormData.subtotal = total;\r\n  }\r\n};\r\nexport const Purchase_orderCreate = (props) => {\r\n  return (\r\n    <Create undoable=\"false\" title=\"New Purchase Order\" {...props}>\r\n      <SimpleForm\r\n        //variant={\"outlined\"}\r\n        variant=\"standard\"\r\n        //sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n      >\r\n        <PO_FORM />\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nconst CustomToolbar = (props) => {\r\n  const componentRef = React.useRef();\r\n  return (\r\n    <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <SaveButton undoable={false} {...props} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ListButton\r\n            basePath={props.basePath}\r\n            label=\"Back\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            icon={<ChevronLeft />}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <ReactToPrint\r\n            trigger={() => {\r\n              // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n              // to the root node of the returned component as it will be overwritten.\r\n              return (\r\n                <Button\r\n                  disabled={!props.record.id}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  label=\"Print\"\r\n                  size=\"medium\"\r\n                  icon={<PrintIcon />}\r\n                />\r\n              );\r\n            }}\r\n            content={() => componentRef.current}\r\n          />\r\n          <div style={{ display: \"none\" }}>\r\n            {console.log(props)}\r\n            <PrintPOComponent ref={componentRef} {...props} />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <DeleteButton undoable={false} />\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst toCurrency = (number) => {\r\n  const formatter = new Intl.NumberFormat(\"de-DE\", {\r\n    style: \"currency\",\r\n    currency: \"EUR\",\r\n  });\r\n  console.log(\"format\" + formatter.format(number));\r\n  return formatter.format(number);\r\n};\r\n\r\nconst fromCurrency = (number) => {\r\n  return parseFloat(number);\r\n};\r\nconst PO_FORM = () => {\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n  const locale = useLocale();\r\n  return (\r\n    <div>\r\n      <Grid container display=\"flex\" spacing={1}>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            className={classes.mr1}\r\n            disabled\r\n            source=\"id\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            className={classes.mr1}\r\n            disabled\r\n            source=\"po_no\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <DateInput\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            initialValue={new Date().toISOString().substring(0, 10)}\r\n            disabled\r\n            className={classes.mr1}\r\n            source=\"created_on\"\r\n            locales={locale}\r\n            // parse={dateParser}\r\n            // format={dateFormatter}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            className={classes.mr1}\r\n            initialValue={user && user.username}\r\n            disabled\r\n            source=\"created_by\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateInput margin=\"none\" source=\"purchase_date\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <FirdousSelect\r\n            margin=\"none\"\r\n            label=\"Supplier\"\r\n            source=\"supplier_id\"\r\n            optionText=\"title\"\r\n            list=\"suppliers\"\r\n            sort=\"title\"\r\n            validate={ra_required}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <FirdousSelect\r\n            margin=\"none\"\r\n            label=\"Project\"\r\n            source=\"project_id\"\r\n            optionText=\"title\"\r\n            list=\"projects\"\r\n            sort=\"title\"\r\n            validate={ra_required}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"delivery_address\" fullWidth />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <FirdousSelect\r\n            defaultValue=\"1\"\r\n            label=\"Status\"\r\n            source=\"status\"\r\n            optionText=\"value\"\r\n            list=\"fprop\"\r\n            sort=\"oid\"\r\n            validate={ra_required}\r\n            fullWidth\r\n            filter={{ type: \"purchaseorder\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextInput multiline source=\"description\" fullWidth />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div className={classes.po_item}>\r\n        <ArrayInput\r\n          //initialValue={initial}\r\n          variant=\"standard\"\r\n          source=\"purchase_details\"\r\n          label=\"Items\"\r\n          fullWidth\r\n        >\r\n          <SimpleFormIterator fullWidth>\r\n            <FirdousSelect\r\n              resettable\r\n              label=\"Item\"\r\n              list=\"stock\"\r\n              source=\"stock_id\"\r\n              sort=\"title\"\r\n              optionText={\"title\"}\r\n              //validate={ra_required}\r\n              initialValue={1}\r\n              fullWidth\r\n              formClassName={classes.iteratorinput}\r\n            />\r\n\r\n            <UnitInput\r\n              label=\"Unit\"\r\n              source=\"unit\"\r\n              //validate={ra_required}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n            <NumberInput\r\n              label=\"Quantity\"\r\n              source=\"qty\"\r\n              //validate={ra_required}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n\r\n            <FormDataConsumer\r\n              subscription={{ values: true }}\r\n              className={classes.iteratorinputdc}\r\n            >\r\n              {({\r\n                formData, // The whole form data\r\n                scopedFormData, // The data for this item of the ArrayInput\r\n                getSource, // A function to get the valid source inside an ArrayInput\r\n                ...rest\r\n              }) => (\r\n                <NumberInput\r\n                  {...rest}\r\n                  label=\"Unit Price\"\r\n                  source={getSource(\"unit_price\")}\r\n                  //validate={ra_required}\r\n                  onChange={calcSubTotal(scopedFormData)}\r\n                  // format={toCurrency}\r\n                  //parse={fromCurrency}\r\n                  formClassName={classes.iteratorinput50}\r\n                  //className={classes.iteratorinput}\r\n                />\r\n              )}\r\n            </FormDataConsumer>\r\n            <TextInput\r\n              disabled\r\n              label=\"Sub Total\"\r\n              source=\"subtotal\"\r\n              //validate={ra_required}\r\n              // value={scopedFormData &&  parseFloat((scopedFormData.unit_price || 0) * (scopedFormData.quantity || 0))}\r\n              formClassName={classes.iteratorinput}\r\n              fullWidth\r\n            />\r\n          </SimpleFormIterator>\r\n        </ArrayInput>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Logo.js",["211"],"import React, { Component } from 'react';\r\nimport image from './ds_circle_logo.png';\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"logo-main\">\r\n        <img width=\"40px\" alt=\"daily smarty ui image logo big\" src={image} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Logo;","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherShow.js",["212","213","214","215","216"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useShowController } from \"react-admin\";\r\nimport Voucher from \"./VoucherPrint\";\r\n\r\nconst VoucherShow = (props) => {\r\n  const {\r\n    basePath, // deduced from the location, useful for action buttons\r\n    defaultTitle, // the translated title based on the resource, e.g. 'Post #123'\r\n    loaded, // boolean that is false until the record is available\r\n    loading, // boolean that is true on mount, and false once the record was fetched\r\n    record, // record fetched via dataProvider.getOne() based on the id from the location\r\n    resource, // the resource name, deduced from the location. e.g. 'posts'\r\n    version, // integer used by the refresh feature\r\n  } = useShowController(props);\r\n  console.log(record);\r\n  if (!loaded) {\r\n    return <CircularProgress />;\r\n  }\r\n  return (\r\n    <Voucher\r\n      voucher={{ ...record }}\r\n      // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n      //customer={{}}\r\n      company={{ name: \"Firdous ERP\", logoUrl: \"%PUBLIC_URL%/firdouslogo.png\" }}\r\n      notes={\"Here comes the Remarks\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VoucherShow;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\charts\\DummyChart.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\charts\\VouchersChart.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\Accounts.js",["217","218"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  JournalVoucher: {\r\n    backgroundColor: \"#64b5f6\",\r\n    color: \"white\",\r\n    hover: {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  PaymentVoucher: {\r\n    backgroundColor: \"#7b1fa2\",\r\n    color: \"white\",\r\n  },\r\n  SalesVoucher: {\r\n    backgroundColor: \"#aa00ff\",\r\n    color: \"white\",\r\n  },\r\n  RecieptVoucher: {\r\n    backgroundColor: \"#00897b\",\r\n    color: \"white\",\r\n  },\r\n  SalaryVoucher: {\r\n    backgroundColor: \"#ff5252\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container display=\"flex\" spacing={2}>\r\n      <Grid item xs={12} sm={3}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Vocuchers Menu\r\n        </Typography>\r\n        <Grid item xs={12}></Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/vouchers\"\r\n              label=\"Voucher Listing\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/coa\"\r\n              label=\"Chart of Accounts\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/notes\"\r\n              label=\"Account Heads\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/coa_type\"\r\n              label=\"Account Types\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/deleted\"\r\n              label=\"Deleted Vouchers\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n        <Grid container spacing={2} direction=\"column\">\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Create Vocuchers\r\n            </Typography>\r\n            <AccountButton\r\n              target=\"/vouchers/create?vou_type=1\"\r\n              label=\"Journal Voucher\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/vouchers/create?vou_type=2\"\r\n              label=\"Payment Voucher\"\r\n              stylename={classes.PaymentVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/vouchers/create?vou_type=4\"\r\n              label=\"Sales Voucher\"\r\n              stylename={classes.SalesVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/vouchers/create?vou_type=3\"\r\n              label=\"Reciept Voucher\"\r\n              stylename={classes.RecieptVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/vouchers/create?vou_type=5\"\r\n              label=\"Salary Voucher\"\r\n              stylename={classes.SalaryVoucher}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst Accounts = () => {\r\n  useAuthenticated();\r\n  const { loading, authenticated } = useAuthState();\r\n\r\n  return (\r\n    <Card>\r\n      <Title title=\"Accounts\" />\r\n      <CardContent>{SimplePaper()}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const AccountButton = (props) => {\r\n  return (\r\n    <Paper\r\n      className={props.stylename}\r\n      //style={{ minHeight: \"100px\" ,maxWidth:\"150px\"}}\r\n      variant=\"outlined\"\r\n      square\r\n    >\r\n      <CardActions>\r\n        <Button\r\n          className={props.stylename}\r\n          to={props.target}\r\n          component={Link}\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          {props.label}\r\n        </Button>\r\n      </CardActions>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js",["219","220","221","222","223"],"import { Box, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ArrayInput,\r\n  Button,\r\n  DateInput,\r\n  DeleteButton,\r\n  ListButton,\r\n  NumberInput,\r\n  required,\r\n  SaveButton,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput,\r\n  Toolbar,\r\n} from \"react-admin\";\r\nimport { useFormState } from \"react-final-form\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport FirdousSelect from \"./FirdousSelect\";\r\nimport PrintVoucherComponent from \"./PrintVoucherComponent\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  inlineBlock: { display: \"inline-flex\", marginRight: \"1em\", width: \"40%\" },\r\n  iteratorinput: { marginRight: \"0.5em\", width: \"30%\" },\r\n\r\n  width20: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"20%\",\r\n    },\r\n  },\r\n  width25: { marginRight: \"0.5em\", width: \"25%\" },\r\n  width30: { marginRight: \"0.5em\", width: \"30%\" },\r\n  width35: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"35%\",\r\n    },\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    //flexGrow: \"2\",\r\n    width: \"100%\",\r\n  },\r\n  width40: { marginRight: \"0.5em\", width: \"40%\" },\r\n  width50: { marginRight: \"0.5em\", width: \"62%\" },\r\n  alightRight: { marginRight: \"0.5em\", width: \"20%\" },\r\n\r\n  maxFixedWidth: { maxWidth: \"180px\", boxSizing: \"border-box\" },\r\n  fixedWidth: { width: \"180px\" },\r\n  BorderandBackgroundIter: {\r\n    border: \"1px solid #ccc\",\r\n    padding: \"1em\",\r\n  },\r\n  VoucherEntry: {\r\n    border: \"1px solid #ccc\",\r\n    minWidth: \"870px\",\r\n    maxWidth: \"1000px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  BorderandBackground: {\r\n    //border: \"1px solid #ccc\",\r\n    //backgroundColor: \"#1976d20f\",\r\n    margin: \"2px\",\r\n    fontWeight: \"bold\",\r\n    MuiFormHelperText: {\r\n      contained: {\r\n        display: \"none\",\r\n      },\r\n      marginDense: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    MuiFormControl: {\r\n      root: { border: \"1px solid #ccc\" },\r\n    },\r\n\r\n    MuiFilledInput: {\r\n      root: { backgroundColor: \"#1976d20f\" },\r\n    },\r\n  },\r\n});\r\n\r\nconst validateVoucherCreation = (values) => {\r\n  const errors = {};\r\n  console.log(\"values:\" + JSON.stringify(values));\r\n  if (values.vou_type == 5 && !values.employee) {\r\n    errors.employee = [\"The Employee is required\"];\r\n  }\r\n\r\n  if (!values.transactions || values.transactions.length == 0) {\r\n    errors.total_debit = [\"Please Enter the Transactions\"];\r\n  } else {\r\n    values.transactions.map((transaction) => {\r\n      (!transaction &&\r\n        (errors.total_debit = [\"Please Enter the Transactions\"])) ||\r\n        (!transaction.coa &&\r\n          (errors.total_debit = [\"Please select transaction account\"])) ||\r\n        ((!transaction.dr || transaction.dr === 0) &&\r\n          (!transaction.cr || transaction.cr === 0) &&\r\n          (errors.total_debit = [\r\n            \"Debit and Credit of a transaction cant be Zero\",\r\n          ]));\r\n    });\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst ra_required = [required()];\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\nexport const VoucherEntryForm = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const initial = [\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n  ];\r\n\r\n  const vou_types = [\r\n    { id: 1, title: \"Journal Voucher\" },\r\n    { id: 2, title: \"Payment Voucher\" },\r\n    { id: 3, title: \"Reciept Voucher\" },\r\n    { id: 4, title: \"Sales Voucher\" },\r\n    { id: 5, title: \"Salary Voucher\" },\r\n    { id: 6, title: \"Inventory Voucher\" },\r\n  ];\r\n  const optionRenderer = (choice) => {\r\n    return choice && ` ${choice.title} ${choice.scode || \"\"}  ${choice.code}`;\r\n  };\r\n\r\n  const calculateSum = (values, source, field) => {\r\n    let sum = 0;\r\n    if (values && values.transactions) {\r\n      values.transactions.map(\r\n        (transaction) =>\r\n          transaction &&\r\n          (sum = parseFloat(sum || 0) + parseFloat(transaction[field] || 0))\r\n      );\r\n      values[source] = parseFloat(sum || 0);\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  const TotalInput = (props) => {\r\n    const { values } = useFormState();\r\n    return (\r\n      <NumberInput\r\n        disabled\r\n        variant=\"standard\"\r\n        source={parseFloat(props.source || 0)}\r\n        value={calculateSum(values, props.source, props.field)}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  const CustomToolbar = (props) => {\r\n    const componentRef = React.useRef();\r\n    return (\r\n      <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <SaveButton undoable={false} {...props} />\r\n          </Grid>\r\n          <Grid item>\r\n            <ListButton\r\n              basePath={props.basePath}\r\n              label=\"Back\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              icon={<ChevronLeft />}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <ReactToPrint\r\n              trigger={() => {\r\n                // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n                // to the root node of the returned component as it will be overwritten.\r\n                return (\r\n                  <Button\r\n                    disabled={!props.record.id}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    label=\"Print\"\r\n                    size=\"medium\"\r\n                    icon={<PrintIcon />}\r\n                  />\r\n                );\r\n              }}\r\n              content={() => componentRef.current}\r\n            />\r\n            <div style={{ display: \"none\" }}>\r\n              {console.log(props)}\r\n              <PrintVoucherComponent ref={componentRef} {...props} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <DeleteButton undoable={false} />\r\n      </Toolbar>\r\n    );\r\n  };\r\n  return (\r\n    <SimpleForm\r\n      toolbar={<CustomToolbar />}\r\n      className={classes.VoucherEntry}\r\n      validate={validateVoucherCreation}\r\n      fullWidth\r\n      redirect=\"show\"\r\n      {...props}\r\n    >\r\n      <Grid container fullWidth spacing={1} display=\"flex\">\r\n        <Grid pr={8} item xs={12} sm={4} md={3}>\r\n          <SelectInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Voucher Type\"\r\n            source=\"vou_type\"\r\n            initialValue={props.vou_type}\r\n            optionText=\"title\"\r\n            optionValue=\"id\"\r\n            choices={vou_types}\r\n            validate={ra_required}\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            margin=\"none\"\r\n            disabled\r\n            source=\"vou_no\"\r\n            //    resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <DateInput\r\n            //initialValue={new Date().toLocaleDateString()}\r\n            margin=\"none\"\r\n            variant=\"outlined\"\r\n            source=\"vou_date\"\r\n            //resource=\"vouchers\"\r\n            validate={ra_required}\r\n            autoFocus\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.no\"\r\n            source=\"chq_no\"\r\n            //resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <DateInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.date\"\r\n            source=\"chq_date\"\r\n            resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            source=\"remarks\"\r\n            //resource=\"vouchers\"\r\n            //validate={ra_required}\r\n            multiline\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box className={classes.formBox}>\r\n            <ArrayInput\r\n              initialValue={initial}\r\n              variant=\"standard\"\r\n              source=\"transactions\"\r\n              label=\"Transactions\"\r\n              fullWidth\r\n              className={classes.BorderandBackgroundIter}\r\n              marginTop=\"none\"\r\n            >\r\n              <SimpleFormIterator fullWidth>\r\n                <FirdousSelect\r\n                  resettable\r\n                  label=\"Account\"\r\n                  list=\"coa\"\r\n                  source=\"coa\"\r\n                  sort=\"code\"\r\n                  optionText={optionRenderer}\r\n                  //validate={ra_required}\r\n                  //initialValue={1}\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width35}\r\n                  className={classes.BorderandBackground}\r\n                  // margin=\"none\"\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  label=\"Project\"\r\n                  source=\"project\"\r\n                  optionText=\"title\"\r\n                  list=\"projects\"\r\n                  sort=\"title\"\r\n                  validate={ra_required}\r\n                  fullWidth\r\n                  initialValue={1}\r\n                  formClassName={classes.width20}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <NumberInput\r\n                  //formClassName={classes.iteratorinput50}\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Debit\"\r\n                  source=\"dr\"\r\n                  // resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  fullWidth\r\n                />\r\n\r\n                <NumberInput\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Credit\"\r\n                  source=\"cr\"\r\n                  //resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  fullWidth\r\n                />\r\n                <TextInput\r\n                  margin=\"none\"\r\n                  label=\"RefNo.\"\r\n                  source=\"refno\"\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width35}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <TextInput\r\n                  variant=\"outlined\"\r\n                  margin=\"none\"\r\n                  source=\"description\"\r\n                  //resource=\"vouchers\"\r\n                  label=\"Description\"\r\n                  validate={ra_required}\r\n                  multiline\r\n                  fullWidth\r\n                  formClassName={classes.width50}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Vendor\"\r\n                  list=\"suppliers\"\r\n                  sort=\"title\"\r\n                  source=\"supplier\"\r\n                  optionText=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width35}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Unit\"\r\n                  source=\"unit\"\r\n                  optionText=\"title\"\r\n                  list=\"units\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Stock\"\r\n                  source=\"stock\"\r\n                  optionText=\"title\"\r\n                  list=\"stock\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Employee\"\r\n                  source=\"employee\"\r\n                  optionText=\"title\"\r\n                  list=\"employees\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  //className={classes.maxFixedWidth}\r\n                />\r\n\r\n                {/* <TextInput formClassName={classes.inlineBlock} label =\"Description\" source=\"description\" resource=\"vouchers\" multiline fullWidth margin=\"none\"/> */}\r\n              </SimpleFormIterator>\r\n            </ArrayInput>\r\n          </Box>\r\n          <Grid container display=\"flex\" fullWidth>\r\n            {/* <Grid item xs=\"6\" align=\"right\">\r\n              <TextInput\r\n                margin=\"none\"\r\n                label=\"Remarks\"\r\n                source=\"remarks\"\r\n                //resource=\"vouchers\"\r\n                multiline\r\n                fullWidth\r\n                className={classes.BorderandBackground}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs=\"12\" align=\"right\">\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_debit\"\r\n                field=\"dr\"\r\n              />\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_credit\"\r\n                field=\"cr\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </SimpleForm>\r\n  );\r\n};\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\Purchases.js",["224","225"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\r\nimport { AccountButton } from \"../accounts/Accounts\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  JournalVoucher: {\r\n    backgroundColor: \"#64b5f6\",\r\n    color: \"white\",\r\n    hover: {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  PaymentVoucher: {\r\n    backgroundColor: \"#7b1fa2\",\r\n    color: \"white\",\r\n  },\r\n  SalesVoucher: {\r\n    backgroundColor: \"#aa00ff\",\r\n    color: \"white\",\r\n  },\r\n  RecieptVoucher: {\r\n    backgroundColor: \"#00897b\",\r\n    color: \"white\",\r\n  },\r\n  SalaryVoucher: {\r\n    backgroundColor: \"#ff5252\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container display=\"flex\" spacing={2}>\r\n      <Grid item xs={12} sm={3}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Purchase Menu\r\n        </Typography>\r\n        <Grid item xs={12}></Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/suppliers\"\r\n              label=\"Suppliers\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/purchaseorder\"\r\n              label=\"Purchase Orders\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/grn\"\r\n              label=\"Goods Receipt Notes (GRN)\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/bills\"\r\n              label=\"Bills\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst Purchases = () => {\r\n  useAuthenticated();\r\n  const { loading, authenticated } = useAuthState();\r\n\r\n  return (\r\n    <Card>\r\n      <Title title=\"Purchases\" />\r\n      <CardContent>{SimplePaper()}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Purchases;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js",["226","227"],"import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { BookingsShow } from \"./booking\";\r\n\r\nexport class BookingPrint extends React.Component {\r\n  render() {\r\n    const { booking, schedule, step } = this.props;\r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => {\r\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n            // to the root node of the returned component as it will be overwritten.\r\n            return <a href=\"#/accounts\">Print this out!</a>;\r\n          }}\r\n          content={() => this.componentRef}\r\n        />\r\n        <BookingConfirm\r\n          booking={booking}\r\n          schedule={schedule}\r\n          step={3}\r\n          ref={(el) => (this.componentRef = el)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class BookingConfirm extends React.Component {\r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    //PROCESS FORM //\r\n    this.props.nextStep();\r\n  };\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { booking, schedule, step } = this.props;\r\n    // const classes = useStyles();\r\n\r\n    if (step == 3) {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Booking Confirmation\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"right\">\r\n                  {/* <BookingPrint />  */}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} container alignContent=\"flex-end\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Booking Details\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <div>&nbsp;</div>\r\n            <Grid container display=\"flex\" spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Date : {new Date(booking.book_date).toLocaleDateString()}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  ID: {} {booking.id}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Code: {booking.code}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Scode: {booking.scode}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Title: {booking.title}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Unit: {booking.unit}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Client: {booking.client}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Project: {booking.project}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Sale Price: {booking.sale_price}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Discount : {booking.discount}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Active : {booking.active}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Remarks : {booking.remarks}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Name : {booking.name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Father's Name : {booking.father_name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Residential Address : {booking.residential_address}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Phone Number : {booking.phone_no}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Occupation : {booking.occupation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Nationality : {booking.nationality}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  CNIC : {booking.cnic}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Reference Of : {booking.reference_off}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Nominee's Name : {booking.nominee_name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Realtion : {booking.relation}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Email : {booking.email}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Schedule Confirmation\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  ID : {schedule.id}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Name : {schedule.name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Date: {new Date(schedule.date).toLocaleDateString()}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Unit :{schedule.unit}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Type : {schedule.type}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  floor : {schedule.floor}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  block : {schedule.block}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Contact : {schedule.contact}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  total Cost : {schedule.total_cost}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Booking : {schedule.on_booking}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Allocation: {schedule.on_allocation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Confirmation : {schedule.on_confirmation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Monthly Installment : {schedule.monthly_installment}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Start : {schedule.on_start}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Quaterly Payment : {schedule.quaterly_payment}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Excavation : {schedule.on_excavation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Foundaiton : {schedule.on_foundation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Slab : {schedule.on_slab}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Block : {schedule.on_block}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Plaster : {schedule.on_plaster}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Plumbing :{schedule.on_plumbing}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Coloring : {schedule.on_coloring}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Finishing: {schedule.on_finishing}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Possesion : {schedule.on_posession}\r\n                </Typography>\r\n                <BookingsShow>show</BookingsShow>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default BookingConfirm;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js",["228","229","230"],"import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { BooleanInput, Button, DateInput, required, TextInput, Toolbar } from \"react-admin\";\r\nimport FirdousSelect from \"../accounts/FirdousSelect\";\r\nclass BookingDetailsForm extends Component {\r\n  \r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  render() {\r\n    const { booking, step, handleChange } = this.props;\r\n    const small = 6;\r\n    const xsmall = 12;\r\n    const medium = 6;\r\n    const styles = {\r\n      button: {\r\n        margin: 15,\r\n      },\r\n    };\r\n    const ra_required = [required()];\r\n\r\n    if (step == 1) {\r\n      return (\r\n        <Box p=\"1em\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Booking Details\r\n          </Typography>\r\n          <div>\r\n            <Grid container spacing={10}>\r\n              <Grid spacing={1} id=\"left-container\" item xs={xsmall} md={4}>\r\n                <Typography variant=\"h7\" gutterBottom>\r\n                  Unit Allotment\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput disabled source=\"id\" fullWidth onBlur={handleChange} />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"client\"\r\n                      defaultValue={booking.client}\r\n                      fullWidth onBlur={handleChange} onBlur={handleChange}\r\n\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                     <FirdousSelect\r\n                       margin=\"projects\"\r\n                      label=\"projects\"\r\n                    source=\"projects\"\r\n                      optionText=\"title\"\r\n                    list=\"projects\"\r\n                    sort=\"title\"\r\n                  validate={ra_required}\r\n                    fullWidth\r\n                          \r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput disabled source=\"code\" fullWidth onBlur={handleChange} />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"scode\"\r\n                      fullWidth onBlur={handleChange} /*options={{ multiLine: true }}*/\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput fullWidth onBlur={handleChange} multiline source=\"title\" />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                  <FirdousSelect\r\n                margin=\"none\"\r\n                label=\"units\"\r\n                source=\"unit\"\r\n                optionText=\"title\"\r\n                list=\"units\"\r\n                sort=\"title\"\r\n                validate={ra_required}\r\n                  fullWidth\r\n                          \r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\r\n                    <DateInput\r\n                      source=\"book_date\"\r\n                      defaultValue={booking.book_date}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"sale_price\"\r\n                      defaultValue={booking.sale_price}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall}>\r\n                    <TextInput\r\n                      source=\"remarks\"\r\n                      defaultValue={booking.remarks}\r\n                      fullWidth onBlur={handleChange}\r\n                      multiline\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid spacing={1} id=\"right-container\" item xs={xsmall} md={6}>\r\n                <Typography variant=\"h7\" gutterBottom>\r\n                  Booking Allottee\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\r\n                    <TextInput\r\n                      source=\"name\"\r\n                      defaultValue={booking.name}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"father_name\"\r\n                      defaultValue={booking.father_name}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"cnic\"\r\n                      defaultValue={booking.cnic}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"phone_no\"\r\n                      defaultValue={booking.phone_no}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall}>\r\n                    <TextInput\r\n                      source=\"residential_address\"\r\n                      defaultValue={booking.residential_address}\r\n                      fullWidth onBlur={handleChange}\r\n                      multiline\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"occupation\"\r\n                      defaultValue={booking.occupation}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"nationality\"\r\n                      defaultValue={booking.nationality}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"client\"\r\n                      defaultValue={booking.client}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                    </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"reference_off\"\r\n                      defaultValue={booking.reference_off}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"nominee_name\"\r\n                      defaultValue={booking.nominee_name}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"relation\"\r\n                      defaultValue={booking.relation}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"email\"\r\n                      defaultValue={booking.unit}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <BooleanInput\r\n                      source=\"active\"\r\n                      defaultValue={booking.active}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Button source=\"Booking\" />\r\n          </div>\r\n\r\n          <Toolbar>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n              <Button label=\"Continue\" primary={true} onClick={this.continue} />\r\n            </Box>\r\n          </Toolbar>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BookingDetailsForm;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingShow.js",["231","232","233","234","235"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useShowController } from 'react-admin';\r\nimport Booking from './BookingPrint';\r\n\r\nconst BookingsShow = props => {\r\n    const {\r\n        basePath, // deduced from the location, useful for action buttons\r\n        defaultTitle, // the translated title based on the resource, e.g. 'Post #123'\r\n        loaded, // boolean that is false until the record is available\r\n        loading, // boolean that is true on mount, and false once the record was fetched\r\n        record, // record fetched via dataProvider.getOne() based on the id from the location\r\n        resource, // the resource name, deduced from the location. e.g. 'posts'\r\n        version, // integer used by the refresh feature\r\n    } = useShowController(props);\r\n    console.log(record)\r\n    if (!loaded) {\r\n        return <CircularProgress />;\r\n    }\r\n    return (\r\n\r\n\r\n\r\n        <Booking\r\n            booking={{ ...record }}\r\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n            //customer={{}}\r\n            company={{ \"name\": \"Firdous ERP\", \"logoUrl\": \"https://dummyimage.com/600x400/000/fff\" }}\r\n            notes={\"Here comes the Remarks\"}\r\n        />\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BookingsShow","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js",["236"],"import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, DateInput, required, TextInput, Toolbar } from \"react-admin\";\r\nimport FirdousSelect from \"../accounts/FirdousSelect\";\r\nclass ScheduleForm extends Component {\r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { schedule, step, handleChange } = this.props;\r\n    const small = 6;\r\n    const xsmall = 12;\r\n    const medium = 6;\r\n    const styles = {\r\n      button: {\r\n        margin: 15,\r\n      },\r\n    };\r\n\r\n\r\n    const ra_required = [required()];\r\n    if (step == 2) {\r\n      return (\r\n        <Box p=\"1em\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Payment Schedule\r\n          </Typography>\r\n          <div>\r\n            <Grid container spacing={7}>\r\n              <Grid spacing={1} id=\"left-container\" item xs={xsmall} md={4}>\r\n                <Typography variant=\"h7\" gutterBottom>\r\n                  Details\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput disabled source=\"id\" fullWidth onBlur={handleChange} />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"name\"\r\n                      defaultValue={schedule.name}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <FirdousSelect\r\n                       margin=\"units\"\r\n                      label=\"units\"\r\n                    source=\"units\"\r\n                      optionText=\"title\"\r\n                    list=\"units\"\r\n                    sort=\"title\"\r\n                  validate={ra_required}\r\n                    fullWidth\r\n                          \r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"type\"\r\n                      defaultValue={schedule.type}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"block\"\r\n                      defaultValue={schedule.block}\r\n                      fullWidth onBlur={handleChange} /*options={{ multiLine: true }}*/\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput fullWidth onBlur={handleChange} multiline source=\"contact\" />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      fullWidth onBlur={handleChange}\r\n                      source=\"total_cost\"\r\n                      defaultValue={schedule.total_cost}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\r\n                    <DateInput\r\n                      source=\"on_booking\"\r\n                      defaultValue={schedule.on_booking}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_allocation\"\r\n                      defaultValue={schedule.on_allocation}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_confirmation\"\r\n                      defaultValue={schedule.on_confirmation}\r\n                      fullWidth onBlur={handleChange}\r\n                      multiline\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid spacing={1} id=\"right-container\" item xs={xsmall} md={4}>\r\n                <Typography variant=\"h7\" gutterBottom>\r\n                  Payment Details\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\r\n                    <TextInput\r\n                      source=\"on_start\"\r\n                      defaultValue={schedule.on_start}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"monthly_installment\"\r\n                      defaultValue={schedule.monthly_installment}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"quaterly_payment\"\r\n                      defaultValue={schedule.quaterly_payment}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_excavation\"\r\n                      defaultValue={schedule.on_excavation}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_foundation\"\r\n                      defaultValue={schedule.on_foundation}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_slab\"\r\n                      defaultValue={schedule.on_slab}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_block\"\r\n                      defaultValue={schedule.on_block}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_plaster\"\r\n                      defaultValue={schedule.on_plaster}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_plumbing\"\r\n                      defaultValue={schedule.on_plumbing}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_electric\"\r\n                      defaultValue={schedule.on_electric}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_coloring\"\r\n                      defaultValue={schedule.on_coloring}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_finishing\"\r\n                      defaultValue={schedule.on_finishing}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={xsmall} sm={small} md={medium}>\r\n                    <TextInput\r\n                      source=\"on_possesion\"\r\n                      defaultValue={schedule.on_possesion}\r\n                      fullWidth onBlur={handleChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Button source=\"Schedule\" />\r\n          </div>\r\n\r\n          <Toolbar>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n              <Button\r\n                label=\"Back\"\r\n                primary={false}\r\n                style={styles.button}\r\n                onClick={this.back}\r\n              />\r\n\r\n              <Button\r\n                label=\"Continue\"\r\n                primary={false}\r\n                style={styles.button}\r\n                onClick={this.continue}\r\n              />\r\n            </Box>\r\n          </Toolbar>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ScheduleForm;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js",["237"],"import React, { Component } from \"react\";\r\nimport logo from \"../../assets/firdouslogo.png\";\r\nimport PurchaseOrder from \"./POPrint\";\r\n\r\nexport class PrintPOComponent extends Component {\r\n  render() {\r\n    const { record, loaded } = this.props;\r\n    if (record.id) {\r\n      console.log(logo);\r\n      return (\r\n        <div>\r\n          <PurchaseOrder\r\n            purchaseorder={{ ...record }}\r\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n            //customer={{}}\r\n            company={{\r\n              name: \"Firdous ERP\",\r\n              logoUrl: logo,\r\n            }}\r\n            notes={\"Here comes the Remarks\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PrintPOComponent;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\sales\\Sales.js",["238","239"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\r\nimport { AccountButton } from \"../accounts/Accounts\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  JournalVoucher: {\r\n    backgroundColor: \"#64b5f6\",\r\n    color: \"white\",\r\n    hover: {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  PaymentVoucher: {\r\n    backgroundColor: \"#7b1fa2\",\r\n    color: \"white\",\r\n  },\r\n  SalesVoucher: {\r\n    backgroundColor: \"#aa00ff\",\r\n    color: \"white\",\r\n  },\r\n  RecieptVoucher: {\r\n    backgroundColor: \"#00897b\",\r\n    color: \"white\",\r\n  },\r\n  SalaryVoucher: {\r\n    backgroundColor: \"#ff5252\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container display=\"flex\" spacing={2}>\r\n      <Grid item xs={12} sm={3}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Sales Menu\r\n        </Typography>\r\n        <Grid item xs={12}></Grid>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/clients\"\r\n              label=\"Clients\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/booking\"\r\n              label=\"Bookings\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/booking\"\r\n              label=\"Bookings\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/schedule\"\r\n              label=\"Booking Schedules\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/invoices\"\r\n              label=\"Invoices\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst Purchases = () => {\r\n  useAuthenticated();\r\n  const { loading, authenticated } = useAuthState();\r\n\r\n  return (\r\n    <Card>\r\n      <Title title=\"Purchases\" />\r\n      <CardContent>{SimplePaper()}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Purchases;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js",["240"],"import React, { Component } from \"react\";\r\nimport logo from \"../../assets/firdouslogo.png\";\r\nimport Voucher from \"./VoucherPrint\";\r\nexport class PrintVoucherComponent extends Component {\r\n  render() {\r\n    const { record, loaded } = this.props;\r\n    if (record.id) {\r\n      console.log(logo);\r\n      return (\r\n        <div>\r\n          <Voucher\r\n            voucher={{ ...record }}\r\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n            //customer={{}}\r\n            company={{\r\n              name: \"Firdous ERP\",\r\n              logoUrl: logo,\r\n            }}\r\n            notes={\"Here comes the Remarks\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PrintVoucherComponent;\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingPrint.js",["241"],"//import { formatCurrency, formatDate } from \"./utils\";\r\nimport PropTypes from 'prop-types';\r\nimport React from \"react\";\r\nexport function formatDate(date) {\r\n  return date\r\n}\r\n\r\nexport function formatCurrency(amount) {\r\n  return amount\r\n}\r\nconst styles = `\r\n.invoice-box{\r\n  max-width:800px;\r\n  margin:auto;\r\n  padding:30px;\r\n  border:1px solid #eee;\r\n  box-shadow:0 0 10px rgba(0, 0, 0, .15);\r\n  font-size:16px;\r\n  line-height:24px;\r\n  font-family:'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\r\n  color:#555;\r\n}\r\n.invoice-box table{\r\n  width:100%;\r\n  line-height:inherit;\r\n  text-align:left;\r\n}\r\n.invoice-box table td{\r\n  padding:5px;\r\n  vertical-align:top;\r\n}\r\n.invoice-box table td td{\r\n  padding:0;\r\n}\r\n.invoice-box .voutype{\r\n  text-align:center;\r\n  vertical-align:top;\r\n  font-size:25px;\r\n  line-height:25px;\r\n  color:#333;\r\n}\r\n.invoice-box .bottomline{\r\n  margin-top:80px;\r\n}\r\n.invoice-box .footer {\r\n  border-top:1px solid grey;\r\n  text-align:center;\r\n}\r\n\r\n.invoice-box table tr td:nth-child(2){\r\n  text-align:right;\r\n}\r\n.invoice-box table tr td.refno{\r\n  text-align:left;\r\n}\r\n.invoice-box table tr.top table td{\r\n  padding-bottom:20px;\r\n}\r\n.invoice-box table tr.top table td.title{\r\n  font-size:35px;\r\n  line-height:35px;\r\n  color:#333;\r\n}\r\n.invoice-box table tr.information table td{\r\n  padding-bottom:40px;\r\n}\r\n.invoice-box table tr.information table td.information-column{\r\n  width:50%;\r\n}\r\n.invoice-box table table.invoice-information{\r\n  display:inline-block;\r\n  width:auto;\r\n}\r\n.invoice-box table table.invoice-information td:first-child{\r\n  padding-right:30px;\r\n}\r\n.invoice-box table tr.information table td td{\r\n  padding-bottom:0;\r\n}\r\n.invoice-box table tr.heading td{\r\n  background:#eee;\r\n  border-bottom:1px solid #ddd;\r\n  font-weight:bold;\r\n}\r\n.invoice-box table tr.details td{\r\n  padding-bottom:20px;\r\n}\r\n.invoice-box table tr.item td{\r\n  border-bottom:1px solid #eee;\r\n}\r\n.invoice-box table tr.item td.debit{\r\n  text-align:right;\r\n}\r\n.invoice-box table tr.heading td.credit{\r\n  text-align:right;\r\n}\r\n.invoice-box table tr.heading td.debit{\r\n  text-align:right;\r\n}\r\n.invoice-box table tr.item td.credit{\r\n  text-align:right;\r\n}\r\n.invoice-box table tr.item.last td{\r\n  border-bottom:none;\r\n}\r\n.invoice-box table tr.total td:nth-child(2){\r\n  background:#eee;\r\n  font-weight:bold;\r\n}\r\n.invoice-box .subheading {\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n}\r\n@media only screen and (max-width: 600px) {\r\n  .invoice-box table tr.top table td{\r\n    width:100%;\r\n    display:block;\r\n    text-align:center;\r\n  }\r\n  .invoice-box table tr.information table td{\r\n    width:100%;\r\n    display:block;\r\n    text-align:center;\r\n  }\r\n}\r\n@media print {\r\n  .invoice-box {\r\n    box-shadow: none;\r\n    border: 0;\r\n  }\r\n}\r\n`\r\n\r\nexport default function Booking({ booking, company, notes }) {\r\n  const { transactions } = booking;\r\n\r\n  const bookingName = booking.book_type || \"Booking\";\r\n\r\n  return (\r\n    <html lang={\"en_US\"}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>\r\n          {company.name} {bookingName}\r\n        </title>\r\n        <style dangerouslySetInnerHTML={{ __html: styles }} />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </head>\r\n      <body>\r\n        <div className=\"invoice-box\">\r\n          <table cellPadding=\"0\" cellSpacing=\"0\">\r\n            <tbody>\r\n              <tr className=\"top\">\r\n              <td colSpan=\"8\" > <div className=\"book_type\">{booking.book_type} <b>Firdous Residency</b></div></td>\r\n              </tr>\r\n              <tr className=\"top\">\r\n                <td colSpan=\"6\" >\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                      \r\n\r\n                        <td>\r\n\r\n                          <div>\r\n                          { <div>Booking  </div>}\r\n                            {booking.book_no && <div className=\"subheading\">Booking No # {booking.book_no}</div>}\r\n                            {booking.book_date && <div>Booking Date :{booking.book_date}</div>}\r\n                            {booking.project && <div>Project {booking.project}</div>}\r\n\r\n                          </div>\r\n                        </td>\r\n                        <td colSpan=\"1\"> <div className=\"book_type\">{booking.book_type} <b>  Al-   </b> <b>Makkah</b> <b>Associates</b></div></td>\r\n                        <td className=\"title\">\r\n                          <img\r\n                            src={company.logoUrl}\r\n                            style={{\r\n                              display: \"block\",\r\n                              width: \"auto\",\r\n                              height: \"auto\",\r\n                              maxWidth: \"200px\",\r\n                              maxHeight: \"100px\",\r\n                              marginLeft: \"auto\",\r\n                            }}\r\n                            alt={company.name}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n              <tr className=\"information\">\r\n                <td colSpan=\"6\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"information-column\">\r\n                          <div className=\"subheading\">Allottee</div>\r\n                          {/* <EntityInfo entity={customer} /> */}\r\n                          <td className=\"subheading\"></td>\r\n                                  <td>{(booking.name)}</td>\r\n                                  <div>\r\n                                  <td>\r\n                                  <td>{(booking.phone_no)}</td>\r\n                                  </td>\r\n                                  </div>\r\n                                  <div>\r\n                                  <td>\r\n                                  <td>{(booking.cnic)}</td>\r\n                                  </td>\r\n                                  </div>\r\n                                  <div>\r\n                                  <td>\r\n                                  <td>{(booking.residential_address)}</td>\r\n                                  </td>\r\n                                  </div>\r\n                                 \r\n\r\n                                  \r\n                        </td>\r\n                        \r\n                        \r\n                        <td className=\"information-column\">\r\n                          <table className=\"invoice-information\">\r\n                            <tbody>\r\n                              <tr>\r\n                                <td className=\"subheading\">{\"Allottment\"} #</td>\r\n                                <td>{\"5\"}</td>\r\n                              </tr>\r\n                              {booking.sale_price && (\r\n                                <tr>\r\n                                  <td className=\"subheading\">Unit Type</td>\r\n                                  <td>{\"(1290sqfts)\"}</td>\r\n                                </tr>\r\n                              )}\r\n                               {booking.discount && (\r\n                                <tr>\r\n                                  <td className=\"subheading\">Unit No</td>\r\n                                  <td>{(\"A-102\")}</td>\r\n                                </tr>\r\n                              )}\r\n                              {booking.discount && (\r\n                                <tr>\r\n                                  <td className=\"subheading\">Discount</td>\r\n                                  <td>{(\"5%\")}</td>\r\n                                </tr>\r\n                              )}\r\n                              {booking.phone_no && (\r\n                                <tr>\r\n                                  <td className=\"subheading\">Total Installments</td>\r\n                                  <td>{(\"10\")}</td>\r\n                                </tr>\r\n                              )}\r\n                              {booking.cnic && (\r\n                                <tr>\r\n                                  <td className=\"subheading\">Installments Due</td>\r\n                                  <td>{\"5\"}</td>\r\n                                </tr>\r\n                              )}\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n           \r\n            {booking.remarks && [\r\n    \r\n                  \r\n              ]} \r\n              \r\n              \r\n              <tr className=\"total\">\r\n                <td />\r\n\r\n                <td colSpan={\"5\"}>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                      \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n              {booking.description && [\r\n                <tr className=\"heading\" key=\"heading\">\r\n                  <td className=\"subheading\" colSpan=\"6\">\r\n                    Installment\r\n                  </td>\r\n                </tr>,\r\n                <tr className=\"details\" key=\"details\">\r\n                  <td colSpan=\"6\">{booking.description}</td>\r\n                </tr>,\r\n              ]} \r\n              <tr className=\"heading\">\r\n                <td className=\"subheading\">Sr.no</td>\r\n                <td className=\"name\"> unit type.</td>\r\n                <td> Area</td>\r\n                <td> Unit Cost</td>\r\n                <td className=\"phone_no\">Booking Amount</td>\r\n                <td className=\"occupation\">Amount remaining</td>\r\n\r\n              </tr>\r\n              {}  <tr className=\"item\" key={booking.description}>\r\n                  <td className=\"subheading\"  >{\"1\"}</td>\r\n                  <td>{booking.name}</td>\r\n                  <td>{booking.father_name}</td>\r\n                  <td>{booking.residential_address}</td>\r\n\r\n                  <td className=\"Phone Number\">{(booking.phone_no)}</td>\r\n                  <td className=\"occupation\">{(booking.occupation)}</td>\r\n                </tr>\r\n              \r\n              <tr className=\"total\">\r\n                <td />\r\n\r\n                <td colSpan={\"5\"}>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                      \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n              <tr className=\"heading\">\r\n                <td className=\"subheading\"></td>\r\n                <td className=\"name\"> </td>\r\n                <td> </td>\r\n                <td>  </td>\r\n                <td className=\"phone_no\"></td>\r\n                <td className=\"occupation\"></td>\r\n\r\n              </tr>\r\n              {}  <tr className=\"item\" key={booking.description}>\r\n                  <td className=\"subheading\"  >{\"2\"}</td>\r\n                  <td>{booking.name}</td>\r\n                  <td>{booking.father_name}</td>\r\n                  <td>{booking.residential_address}</td>\r\n\r\n                  <td className=\"Phone Number\">{(booking.phone_no)}</td>\r\n                  <td className=\"occupation\">{(booking.occupation)}</td>\r\n                </tr>\r\n              \r\n              <tr className=\"total\">\r\n                <td />\r\n\r\n                <td colSpan={\"5\"}>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                      \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            \r\n            </tbody>\r\n          </table>\r\n          {notes && (\r\n            <div style={{ marginTop: 30 }}>\r\n              <div className=\"\">Remarks: {notes}</div>\r\n\r\n            </div>\r\n          )}\r\n          <div className=\"bottomline\">\r\n            <table cellPadding=\"0\" cellSpacing=\"0\">\r\n              <tbody>\r\n                <tr className=\"footer\">\r\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Prepared By</div></td>\r\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Checked By</div></td>\r\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Senctioned By</div></td>\r\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Signature By</div></td>\r\n                 \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n        </div>\r\n      </body>\r\n    </html >\r\n  );\r\n}\r\n\r\nBooking.propTypes = {\r\n  company: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    logoUrl: PropTypes.string,\r\n  }).isRequired,\r\n  booking: PropTypes.shape({\r\n    book_no: PropTypes.string,\r\n    book_date: PropTypes.string,\r\n    book_type: PropTypes.string,\r\n    project: PropTypes.string,\r\n    sale_price: PropTypes.string,\r\n    discount: PropTypes.string,\r\n    father_name: PropTypes.string,\r\n    client: PropTypes.string,\r\n    phone_no: PropTypes.string,\r\n    occupation: PropTypes.string,\r\n    reference_off: PropTypes.string,\r\n    nationality: PropTypes.string,\r\n    nominee_name: PropTypes.string,\r\n    relation: PropTypes.string,\r\n    residential_address: PropTypes.string,\r\n    cnic: PropTypes.string,\r\n    email: PropTypes.string,\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    description: PropTypes.string,\r\n    remarks: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n\r\n  lang: PropTypes.string,\r\n  notes: PropTypes.node,\r\n};\r\n\r\nBooking.defaultProps = {\r\n  lang: \"en_US\",\r\n  notes: null,\r\n};\r\n","C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\Fprop.js",[],"C:\\Users\\pc\\projects\\firdouserp\\frontend\\src\\app\\components\\purchases\\POPrint.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":266,"column":9,"nodeType":"248","messageId":"249","endLine":266,"endColumn":16},{"ruleId":"246","severity":1,"message":"250","line":275,"column":10,"nodeType":"248","messageId":"249","endLine":275,"endColumn":19},{"ruleId":"246","severity":1,"message":"251","line":318,"column":7,"nodeType":"248","messageId":"249","endLine":318,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":27,"column":20,"nodeType":"254","endLine":27,"endColumn":44},{"ruleId":"252","severity":1,"message":"255","line":51,"column":36,"nodeType":"254","endLine":51,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":10,"column":1,"nodeType":"258","endLine":24,"endColumn":3},{"ruleId":"246","severity":1,"message":"259","line":113,"column":9,"nodeType":"248","messageId":"249","endLine":113,"endColumn":16},{"ruleId":"246","severity":1,"message":"260","line":114,"column":9,"nodeType":"248","messageId":"249","endLine":114,"endColumn":17},{"ruleId":"246","severity":1,"message":"261","line":115,"column":9,"nodeType":"248","messageId":"249","endLine":115,"endColumn":18},{"ruleId":"246","severity":1,"message":"262","line":176,"column":7,"nodeType":"248","messageId":"249","endLine":176,"endColumn":20},{"ruleId":"246","severity":1,"message":"263","line":186,"column":7,"nodeType":"248","messageId":"249","endLine":186,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":46,"column":33,"nodeType":"266","messageId":"267","endLine":46,"endColumn":35},{"ruleId":"264","severity":1,"message":"268","line":49,"column":11,"nodeType":"269","messageId":"270","endLine":49,"endColumn":18},{"ruleId":"256","severity":1,"message":"271","line":7,"column":1,"nodeType":"258","endLine":15,"endColumn":3},{"ruleId":"246","severity":1,"message":"272","line":8,"column":7,"nodeType":"248","messageId":"249","endLine":8,"endColumn":16},{"ruleId":"252","severity":1,"message":"273","line":105,"column":32,"nodeType":"254","endLine":105,"endColumn":62},{"ruleId":"246","severity":1,"message":"263","line":141,"column":7,"nodeType":"248","messageId":"249","endLine":141,"endColumn":17},{"ruleId":"246","severity":1,"message":"262","line":150,"column":7,"nodeType":"248","messageId":"249","endLine":150,"endColumn":20},{"ruleId":"252","severity":1,"message":"274","line":164,"column":33,"nodeType":"254","endLine":164,"endColumn":56},{"ruleId":"246","severity":1,"message":"275","line":257,"column":7,"nodeType":"248","messageId":"249","endLine":257,"endColumn":17},{"ruleId":"246","severity":1,"message":"276","line":266,"column":7,"nodeType":"248","messageId":"249","endLine":266,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":7,"column":9,"nodeType":"254","endLine":7,"endColumn":78},{"ruleId":"246","severity":1,"message":"279","line":7,"column":5,"nodeType":"248","messageId":"249","endLine":7,"endColumn":13},{"ruleId":"246","severity":1,"message":"280","line":8,"column":5,"nodeType":"248","messageId":"249","endLine":8,"endColumn":17},{"ruleId":"246","severity":1,"message":"281","line":10,"column":5,"nodeType":"248","messageId":"249","endLine":10,"endColumn":12},{"ruleId":"246","severity":1,"message":"282","line":12,"column":5,"nodeType":"248","messageId":"249","endLine":12,"endColumn":13},{"ruleId":"246","severity":1,"message":"283","line":13,"column":5,"nodeType":"248","messageId":"249","endLine":13,"endColumn":12},{"ruleId":"246","severity":1,"message":"281","line":142,"column":11,"nodeType":"248","messageId":"249","endLine":142,"endColumn":18},{"ruleId":"246","severity":1,"message":"284","line":142,"column":20,"nodeType":"248","messageId":"249","endLine":142,"endColumn":33},{"ruleId":"285","severity":1,"message":"286","line":95,"column":23,"nodeType":"287","messageId":"288","endLine":95,"endColumn":25},{"ruleId":"285","severity":1,"message":"286","line":99,"column":58,"nodeType":"287","messageId":"288","endLine":99,"endColumn":60},{"ruleId":"264","severity":1,"message":"268","line":102,"column":43,"nodeType":"266","messageId":"289","endLine":102,"endColumn":45},{"ruleId":"246","severity":1,"message":"262","line":118,"column":7,"nodeType":"248","messageId":"249","endLine":118,"endColumn":20},{"ruleId":"246","severity":1,"message":"263","line":128,"column":7,"nodeType":"248","messageId":"249","endLine":128,"endColumn":17},{"ruleId":"246","severity":1,"message":"281","line":90,"column":11,"nodeType":"248","messageId":"249","endLine":90,"endColumn":18},{"ruleId":"246","severity":1,"message":"284","line":90,"column":20,"nodeType":"248","messageId":"249","endLine":90,"endColumn":33},{"ruleId":"246","severity":1,"message":"290","line":11,"column":32,"nodeType":"248","messageId":"249","endLine":11,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":48,"column":14,"nodeType":"287","messageId":"288","endLine":48,"endColumn":16},{"ruleId":"246","severity":1,"message":"291","line":17,"column":11,"nodeType":"248","messageId":"249","endLine":17,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":24,"column":14,"nodeType":"287","messageId":"288","endLine":24,"endColumn":16},{"ruleId":"292","severity":1,"message":"293","line":44,"column":55,"nodeType":"294","endLine":44,"endColumn":76},{"ruleId":"246","severity":1,"message":"279","line":7,"column":9,"nodeType":"248","messageId":"249","endLine":7,"endColumn":17},{"ruleId":"246","severity":1,"message":"280","line":8,"column":9,"nodeType":"248","messageId":"249","endLine":8,"endColumn":21},{"ruleId":"246","severity":1,"message":"281","line":10,"column":9,"nodeType":"248","messageId":"249","endLine":10,"endColumn":16},{"ruleId":"246","severity":1,"message":"282","line":12,"column":9,"nodeType":"248","messageId":"249","endLine":12,"endColumn":17},{"ruleId":"246","severity":1,"message":"283","line":13,"column":9,"nodeType":"248","messageId":"249","endLine":13,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":28,"column":14,"nodeType":"287","messageId":"288","endLine":28,"endColumn":16},{"ruleId":"246","severity":1,"message":"295","line":7,"column":21,"nodeType":"248","messageId":"249","endLine":7,"endColumn":27},{"ruleId":"246","severity":1,"message":"281","line":97,"column":11,"nodeType":"248","messageId":"249","endLine":97,"endColumn":18},{"ruleId":"246","severity":1,"message":"284","line":97,"column":20,"nodeType":"248","messageId":"249","endLine":97,"endColumn":33},{"ruleId":"246","severity":1,"message":"295","line":6,"column":21,"nodeType":"248","messageId":"249","endLine":6,"endColumn":27},{"ruleId":"246","severity":1,"message":"296","line":136,"column":11,"nodeType":"248","messageId":"249","endLine":136,"endColumn":23},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Copyright' is defined but never used.","'i18nProvider' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Coa_typeSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Coa_typeTitle must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'refresh' is assigned a value but never used.","'redirect' is assigned a value but never used.","'onFailure' is assigned a value but never used.","'dateFormatter' is assigned a value but never used.","'dateParser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Assign array to a variable before exporting as module default","'useStyles' is assigned a value but never used.","Imported JSX component Purchase_orderSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Purchase_orderTitle must be in PascalCase or SCREAMING_SNAKE_CASE","'toCurrency' is assigned a value but never used.","'fromCurrency' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'basePath' is assigned a value but never used.","'defaultTitle' is assigned a value but never used.","'loading' is assigned a value but never used.","'resource' is assigned a value but never used.","'version' is assigned a value but never used.","'authenticated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","expectedInside","'step' is assigned a value but never used.","'styles' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'loaded' is assigned a value but never used.","'transactions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]