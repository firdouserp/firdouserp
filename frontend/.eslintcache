[{"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\index.js":"1","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\App.js":"3","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\dataProvider.js":"4","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\inMemoryJWT.js":"5","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\authProvider.js":"6","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js":"7","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\users.js":"8","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\projects.js":"9","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\suppliers.js":"10","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Menu.js":"11","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\SubMenu.js":"12","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":2172,"mtime":1609089333488,"results":"17","hashOfConfig":"15"},{"size":3730,"mtime":1608983836868,"results":"18","hashOfConfig":"15"},{"size":2944,"mtime":1608983138662,"results":"19","hashOfConfig":"15"},{"size":1923,"mtime":1608987236728,"results":"20","hashOfConfig":"15"},{"size":1386,"mtime":1608998001259,"results":"21","hashOfConfig":"15"},{"size":606,"mtime":1609003119112,"results":"22","hashOfConfig":"15"},{"size":3191,"mtime":1609085016457,"results":"23","hashOfConfig":"15"},{"size":3436,"mtime":1609087790692,"results":"24","hashOfConfig":"15"},{"size":3477,"mtime":1609081086111,"results":"25","hashOfConfig":"15"},{"size":2213,"mtime":1609078866007,"results":"26","hashOfConfig":"15"},{"size":345,"mtime":1609086625306,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11dap3z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\index.js",[],["62","63"],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\App.js",["64","65"],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\dataProvider.js",["66"],"import { stringify } from 'query-string';\nimport { fetchUtils } from 'ra-core';\n\nimport inMemoryJWT from './inMemoryJWT';\n\nconst getXTotalCountHeaderValue = (headers) => {\n    if (!headers.has('x-total-count')) {\n        throw new Error(\n            'The X-Total-Count header is missing in the HTTP Response.'\n        );\n    }\n\n    return parseInt(headers.get('x-total-count'), 10);\n};\n\nconst formatFilters = (filters) => {\n    return Object.keys(filters).reduce((acc, filterKey) => {\n        const [name, operator = 'eq'] = filterKey.split(':');\n        return {\n            ...acc,\n            [name]: `${filters[filterKey]}:${operator}`,\n        };\n    }, {});\n};\n\nexport default (apiUrl) => {\n    const httpClient = (url) => {\n        const options = {\n            headers: new Headers({ Accept: 'application/json' }),\n        };\n        const token = inMemoryJWT.getToken();\n\n        if (token) {\n            options.headers.set('Authorization', `Bearer ${token}`);\n            console.log(url);\n            return fetchUtils.fetchJson(url, options);\n        } else {\n            inMemoryJWT.setRefreshTokenEndpoint('http://localhost:2000/api/v1/users/login');\n            return inMemoryJWT.getRefreshedToken().then((gotFreshToken) => {\n                if (gotFreshToken) {\n                    options.headers.set('Authorization', `Bearer ${inMemoryJWT.getToken()}`);\n                };\n                return fetchUtils.fetchJson(url, options);\n            });\n        }\n    };\n\n    return {\n        getList: (resource, params) => {\n            const { page: currentPage, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const filters = params.filter;\n            const query = {\n                sortBy: field,\n                orderBy: order,\n                currentPage,\n                perPage,\n                ...formatFilters(filters),\n            };\n            const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n            return httpClient(url).then(({ headers, json }) => {\n                return {\n                    data: json,\n                    total: getXTotalCountHeaderValue(headers),\n                };\n            });\n        },\n\n        getOne: (resource, params) =>\n            httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\n                data: json,\n            })),\n\n        getMany: (resource, params) => {\n            const filters = params.filter;\n            const query = {\n                sortBy: 'id',\n                currentPage: 1,\n                perPage: 100,\n                ...formatFilters(filters),\n            };\n            const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n            return httpClient(url).then(({ headers, json }) => {\n                return {\n                    data: json,\n                    total: getXTotalCountHeaderValue(headers),\n                };\n            });\n        },\n\n        getManyReference: (resource, params) => {\n            const filters = params.filter;\n            const query = {\n                sortBy: 'id',\n                currentPage: 1,\n                perPage: 100,\n                ...formatFilters(filters),\n            };\n            const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n            return httpClient(url).then(({ headers, json }) => {\n                return {\n                    data: json,\n                    total: getXTotalCountHeaderValue(headers),\n                };\n            });\n        },\n\n        update: () => Promise.reject(),\n        updateMany: () => Promise.reject(),\n        create: () => Promise.reject(),\n        delete: () => Promise.reject(),\n        deleteMany: () => Promise.reject(),\n    };\n};\n",["67","68"],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\inMemoryJWT.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\auth\\authProvider.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\users.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\projects.js",["69","70","71","72","73"],"import * as React from \"react\";\r\nimport {BooleanInput , SearchInput,Filter, List, Datagrid, Edit, Create, SimpleForm, DateField, TextField, EditButton, TextInput, DateInput, CheckboxGroupInput, BooleanField } from 'react-admin';\r\nimport { TopToolbar, ListButton, ShowButton } from 'react-admin';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\n\r\nexport const ProjectActions = ({ basePath, data }) => (\r\n    <TopToolbar>\r\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n      {/* <ShowButton basePath={basePath} record={data} /> */}\r\n    </TopToolbar>\r\n);\r\n\r\nconst ProjectSearchFilter = (props) => (\r\n   \r\n        <Filter {...props}>\r\n          <SearchInput  placeholder=\"Title\" source=\"title\" alwaysOn />\r\n          <SearchInput placeholder=\"SCode\"  source=\"scode\" alwaysOn />\r\n          <SearchInput placeholder=\"Code\"  source=\"code\" alwaysOn />\r\n        </Filter>\r\n      \r\n  );\r\n\r\nexport const ProjectList = props => (\r\n    <List filters={<ProjectSearchFilter />} {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"code\" />\r\n            <TextField source=\"scode\" />\r\n            <TextField source=\"title\" />\r\n            <TextField source=\"location\" />\r\n            <TextField source=\"city\" />\r\n            <TextField source=\"client\" />\r\n            <TextField source=\"cost\" />\r\n            <TextField source=\"nature\" />\r\n            <TextField source=\"remarks\" />\r\n            <TextField source=\"active\" />\r\n            <EditButton  variant=\"contained\" color=\"secondary\"/>\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst ProjectTitle = ({ record }) => {\r\n    return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const ProjectEdit = (props) => (\r\n    <Edit  actions={<ProjectActions />} title={<ProjectTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput source=\"scode\" /*options={{ multiLine: true }}*/ />\r\n            <TextInput multiline source=\"title\" />\r\n            <TextInput source=\"location\" />\r\n            <TextInput source=\"city\" />\r\n            <TextInput source=\"client\" />\r\n            <TextInput source=\"cost\" />\r\n            <TextInput source=\"country\" />\r\n            <TextInput source=\"nature\" />\r\n            <TextInput source=\"remarks\" />\r\n            <BooleanInput  source=\"active\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const ProjectCreate = (props) => (\r\n    <Create actions={<ProjectActions />}  title=\"New Project\" {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"code\" />\r\n            <TextInput source=\"scode\" /*options={{ multiLine: true }}*/ />\r\n            <TextInput multiline source=\"title\" />\r\n            <TextInput source=\"location\" />\r\n            <TextInput source=\"city\" />\r\n            <TextInput source=\"client\" />\r\n            <TextInput source=\"cost\" />\r\n            <TextInput source=\"country\" />\r\n            <TextInput source=\"nature\" />\r\n            <TextInput source=\"remarks\" />\r\n            <BooleanInput  source=\"active\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\suppliers.js",["74","75","76","77","78","79"],"import * as React from \"react\";\r\nimport {BooleanInput , SearchInput,Filter, List, Datagrid, Edit, Create, SimpleForm, DateField, TextField, EditButton, TextInput, DateInput, CheckboxGroupInput, BooleanField } from 'react-admin';\r\nimport { TopToolbar, ListButton, ShowButton } from 'react-admin';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport { makeStyles, Chip } from '@material-ui/core';\r\n\r\nexport const SupplierActions = ({ basePath, data }) => (\r\n    <TopToolbar>\r\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n      {/* <ShowButton basePath={basePath} record={data} /> */}\r\n    </TopToolbar>\r\n);\r\n\r\nconst SupplierSearchFilter = (props) => (\r\n   \r\n        <Filter {...props}>\r\n          <SearchInput  placeholder=\"Title\" source=\"title\" alwaysOn />\r\n          <SearchInput placeholder=\"SCode\"  source=\"scode\" alwaysOn />\r\n          <SearchInput placeholder=\"Code\"  source=\"code\" alwaysOn />\r\n        </Filter>\r\n      \r\n  );\r\n\r\nexport const SupplierList = (props) => (\r\n    <List filters={<SupplierSearchFilter />} {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"code\" />\r\n            <TextField source=\"scode\" />\r\n            <TextField source=\"title\" />\r\n            <BooleanField source=\"active\" />\r\n            <TextField source=\"nature\" />\r\n            <EditButton  variant=\"contained\" color=\"secondary\"/>\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst SupplierTitle = ({ record }) => {\r\n    return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const SupplierEdit = (props) => (\r\n    <Edit  undoable={false} actions={<SupplierActions />} title={<SupplierTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput source=\"scode\" /*options={{ multiLine: true }}*/ />\r\n            <TextInput multiline source=\"title\" />\r\n            <TextInput source=\"person\" />\r\n            <TextInput source=\"contact\" />\r\n            <TextInput source=\"address\" />\r\n            <TextInput source=\"city\" />\r\n            <TextInput source=\"country\" />\r\n            <TextInput source=\"email\" />\r\n            <TextInput source=\"fax\" />\r\n            <TextInput source=\"ntn\" />\r\n            <TextInput source=\"stn\" />\r\n            <TextInput source=\"cnic\" />\r\n            <TextInput source=\"businesstitle\" />\r\n            <TextInput source=\"nature\" />\r\n            <BooleanInput  source=\"active\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const SupplierCreate = (props) => (\r\n    <Create actions={<SupplierActions />}  title=\"New Suppier\" {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"code\" />\r\n            <TextInput source=\"scode\" />\r\n            <TextInput multiline source=\"title\" />\r\n            <TextInput source=\"person\" />\r\n            <TextInput source=\"contact\" />\r\n            <TextInput source=\"address\" />\r\n            <TextInput source=\"city\" />\r\n            <TextInput source=\"country\" />\r\n            <TextInput source=\"email\" />\r\n            <TextInput source=\"fax\" />\r\n            <TextInput source=\"ntn\" />\r\n            <TextInput source=\"stn\" />\r\n            <TextInput source=\"cnic\" />\r\n            <TextInput source=\"businesstitle\" />\r\n            <TextInput source=\"nature\" />\r\n            <BooleanInput  source=\"active\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Menu.js",["80"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport { withRouter } from 'react-router-dom';\r\nimport OrderIcon from '@material-ui/icons/AttachMoney';\r\nimport InvoiceIcon from '@material-ui/icons/LibraryBooks';\r\nimport ReviewIcon from '@material-ui/icons/Comment';\r\nimport {\r\n    translate,\r\n    DashboardMenuItem,\r\n    MenuItemLink,\r\n    Responsive,\r\n} from 'react-admin';\r\n\r\nimport SubMenu from './SubMenu';\r\nclass Menu extends Component {\r\n    state = {\r\n        menuCatalog: false,\r\n        menuSales: false,\r\n        menuCustomers: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        onMenuClick: PropTypes.func,\r\n        logout: PropTypes.object,\r\n    };\r\n\r\n    handleToggle = menu => {\r\n        this.setState(state => ({ [menu]: !state[menu] }));\r\n    };\r\n\r\n    render() {\r\n        const { onMenuClick, open, logout, translate } = this.props;\r\n        return (\r\n            <div>\r\n                {' '}\r\n                <DashboardMenuItem onClick={onMenuClick} />\r\n                <SubMenu\r\n                    handleToggle={() => this.handleToggle('menuSales')}\r\n                    isOpen={this.state.menuSales}\r\n                    sidebarIsOpen={open}\r\n                    name=\"pos.menu.sales\"\r\n                    icon={OrderIcon}\r\n                >\r\n                    <MenuItemLink\r\n                        to={`/commands`}\r\n                        primaryText={translate(`resources.commands.name`, {\r\n                            smart_count: 2,\r\n                        })}\r\n                        leftIcon={OrderIcon}\r\n                        onClick={onMenuClick}\r\n                    />\r\n                    <MenuItemLink\r\n                        to={`/invoices`}\r\n                        primaryText={translate(`resources.invoices.name`, {\r\n                            smart_count: 2,\r\n                        })}\r\n                        leftIcon={InvoiceIcon}\r\n                        onClick={onMenuClick}\r\n                    />\r\n                </SubMenu>\r\n               \r\n                <MenuItemLink\r\n                    to={`/reviews`}\r\n                    primaryText={translate(`resources.reviews.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={ReviewIcon}\r\n                    onClick={onMenuClick}\r\n                />\r\n                <Responsive\r\n                    xsmall={\r\n                        <MenuItemLink\r\n                            to=\"/configuration\"\r\n                            primaryText={translate('pos.configuration')}\r\n                            leftIcon={<SettingsIcon />}\r\n                            onClick={onMenuClick}\r\n                        />\r\n                    }\r\n                    medium={null}\r\n                />\r\n                <Responsive\r\n                    small={logout}\r\n                    medium={null} // Pass null to render nothing on larger devices\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    open: state.admin.ui.sidebarOpen,\r\n    theme: state.theme,\r\n    locale: state.i18n.locale,\r\n});\r\n\r\nconst enhance = compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        {}\r\n    ),\r\n    translate\r\n);\r\n\r\nexport default enhance(Menu);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\SubMenu.js",[],["81","82"],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js",["83"],"import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\nexport default () => (\r\n    <Card >\r\n        <Title title=\"Welcome to the Firdous ERP\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":11,"column":9,"nodeType":"90","messageId":"91","endLine":11,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":11},{"ruleId":"93","severity":1,"message":"94","line":26,"column":1,"nodeType":"95","endLine":117,"endColumn":3},{"ruleId":"84","replacedBy":"96"},{"ruleId":"86","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":2,"column":86,"nodeType":"90","messageId":"91","endLine":2,"endColumn":95},{"ruleId":"88","severity":1,"message":"99","line":2,"column":131,"nodeType":"90","messageId":"91","endLine":2,"endColumn":140},{"ruleId":"88","severity":1,"message":"100","line":2,"column":142,"nodeType":"90","messageId":"91","endLine":2,"endColumn":160},{"ruleId":"88","severity":1,"message":"101","line":2,"column":162,"nodeType":"90","messageId":"91","endLine":2,"endColumn":174},{"ruleId":"88","severity":1,"message":"102","line":3,"column":34,"nodeType":"90","messageId":"91","endLine":3,"endColumn":44},{"ruleId":"88","severity":1,"message":"98","line":2,"column":86,"nodeType":"90","messageId":"91","endLine":2,"endColumn":95},{"ruleId":"88","severity":1,"message":"99","line":2,"column":131,"nodeType":"90","messageId":"91","endLine":2,"endColumn":140},{"ruleId":"88","severity":1,"message":"100","line":2,"column":142,"nodeType":"90","messageId":"91","endLine":2,"endColumn":160},{"ruleId":"88","severity":1,"message":"102","line":3,"column":34,"nodeType":"90","messageId":"91","endLine":3,"endColumn":44},{"ruleId":"88","severity":1,"message":"103","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":20},{"ruleId":"88","severity":1,"message":"104","line":5,"column":22,"nodeType":"90","messageId":"91","endLine":5,"endColumn":26},{"ruleId":"88","severity":1,"message":"105","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":17},{"ruleId":"84","replacedBy":"106"},{"ruleId":"86","replacedBy":"107"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":1,"nodeType":"95","endLine":10,"endColumn":3},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["108"],["109"],"'DateField' is defined but never used.","'DateInput' is defined but never used.","'CheckboxGroupInput' is defined but never used.","'BooleanField' is defined but never used.","'ShowButton' is defined but never used.","'makeStyles' is defined but never used.","'Chip' is defined but never used.","'LabelIcon' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]