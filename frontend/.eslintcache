[{"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\index.js":"1","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\App.js":"3","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\MyAppBar.js":"4","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\users.js":"5","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\units.js":"6","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js":"7","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\projects.js":"8","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js":"9","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js":"10","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\suppliers.js":"11","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\purchaseorders.js":"12","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\booking.js":"13","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Logo.js":"14","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherShow.js":"15","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js":"16","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\charts\\DummyChart.js":"17","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\charts\\VouchersChart.js":"18","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\Accounts.js":"19","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js":"20","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\Purchases.js":"21","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js":"22","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js":"23","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js":"24","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingShow.js":"25","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js":"26","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\sales\\Sales.js":"27","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js":"28","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js":"29","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingPrint.js":"30","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\POPrint.js":"31","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\coa.js":"32","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\coa_type.js":"33","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\custom\\CustomMenu.js":"34","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\custom\\customRoutes.js":"35","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\grn.js":"36","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\notes.js":"37","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\vouchers.js":"38","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\settings\\Fprop.js":"39","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\inventory\\stock.js":"40","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\schedule.js":"41","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\payroll\\employees.js":"42"},{"size":500,"mtime":499162500000,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":10317,"mtime":1611069854149,"results":"46","hashOfConfig":"44"},{"size":1200,"mtime":1609756329630,"results":"47","hashOfConfig":"44"},{"size":589,"mtime":1609756329660,"results":"48","hashOfConfig":"44"},{"size":4898,"mtime":1610361037315,"results":"49","hashOfConfig":"44"},{"size":752,"mtime":1610010940702,"results":"50","hashOfConfig":"44"},{"size":5353,"mtime":1610361037308,"results":"51","hashOfConfig":"44"},{"size":1333,"mtime":1609756329665,"results":"52","hashOfConfig":"44"},{"size":3499,"mtime":1610974462327,"results":"53","hashOfConfig":"44"},{"size":7148,"mtime":1610974462344,"results":"54","hashOfConfig":"44"},{"size":12523,"mtime":1611063082033,"results":"55","hashOfConfig":"44"},{"size":5307,"mtime":1610974462332,"results":"56","hashOfConfig":"44"},{"size":299,"mtime":1609756329627,"results":"57","hashOfConfig":"44"},{"size":1325,"mtime":1610627279208,"results":"58","hashOfConfig":"44"},{"size":1224,"mtime":1610361037293,"results":"59","hashOfConfig":"44"},{"size":1497,"mtime":1609756329643,"results":"60","hashOfConfig":"44"},{"size":1520,"mtime":1610361037304,"results":"61","hashOfConfig":"44"},{"size":4636,"mtime":1610361037292,"results":"62","hashOfConfig":"44"},{"size":14651,"mtime":1610974462321,"results":"63","hashOfConfig":"44"},{"size":2462,"mtime":1610974462336,"results":"64","hashOfConfig":"44"},{"size":8588,"mtime":1610974462326,"results":"65","hashOfConfig":"44"},{"size":9668,"mtime":1610974462323,"results":"66","hashOfConfig":"44"},{"size":9016,"mtime":1610974462331,"results":"67","hashOfConfig":"44"},{"size":1426,"mtime":1610974462329,"results":"68","hashOfConfig":"44"},{"size":916,"mtime":1610989921048,"results":"69","hashOfConfig":"44"},{"size":2647,"mtime":1610974462345,"results":"70","hashOfConfig":"44"},{"size":10887,"mtime":1610628118580,"results":"71","hashOfConfig":"44"},{"size":912,"mtime":1610628077437,"results":"72","hashOfConfig":"44"},{"size":13264,"mtime":1610974462328,"results":"73","hashOfConfig":"44"},{"size":11217,"mtime":1610990093842,"results":"74","hashOfConfig":"44"},{"size":3516,"mtime":1611068820228,"results":"75","hashOfConfig":"44"},{"size":2514,"mtime":1611068810724,"results":"76","hashOfConfig":"44"},{"size":2773,"mtime":1611069042414,"results":"77","hashOfConfig":"44"},{"size":679,"mtime":1611069221243,"results":"78","hashOfConfig":"44"},{"size":4702,"mtime":1611070064456,"results":"79","hashOfConfig":"44"},{"size":3187,"mtime":1611069343491,"results":"80","hashOfConfig":"44"},{"size":4710,"mtime":1611069379459,"results":"81","hashOfConfig":"44"},{"size":3209,"mtime":1611069408236,"results":"82","hashOfConfig":"44"},{"size":4520,"mtime":1611069454066,"results":"83","hashOfConfig":"44"},{"size":10442,"mtime":1611069479344,"results":"84","hashOfConfig":"44"},{"size":5108,"mtime":1611069526277,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"11dap3z",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\index.js",[],["194","195"],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\App.js",["196","197","198"],"import Link from \"@material-ui/core/Link\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport simpleRestProvider from \"ra-data-simple-rest\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport englishMessages from \"ra-language-english\";\nimport * as React from \"react\";\nimport {\n  Admin,\n  fetchUtils,\n  Layout,\n  Login,\n  Resource,\n  Sidebar,\n} from \"react-admin\";\nimport \"./App.css\";\nimport {\n  CoaCreate,\n  CoaEdit,\n  CoaIcon,\n  CoaList,\n} from \"./app/components/accounts/coa\";\nimport {\n  Coa_typeCreate,\n  Coa_typeEdit,\n  Coa_typeIcon,\n  Coa_typeList,\n} from \"./app/components/accounts/coa_type\";\nimport {\n  NotesCreate,\n  NotesEdit,\n  NotesIcon,\n  NotesList,\n} from \"./app/components/accounts/notes\";\nimport {\n  VouchersCreate,\n  VouchersEdit,\n  VouchersIcon,\n  VouchersList,\n  VouchersShow,\n} from \"./app/components/accounts/vouchers\";\n// import {\n//   VoucherEdit,\n//   VoucherEntry\n// } from \"./app/components/accounts/VoucherEntry\";\n// import {\n//   VoucherEntry, VouchersEdit\n// } from \"./app/components/accounts/VoucherEntry2\";\nimport {\n  BookingEdit,\n  BookingIcon,\n  BookingList,\n  BookingsShow,\n} from \"./app/components/bookings/booking\";\nimport BookingFormWizard from \"./app/components/bookings/BookingFormWizard\";\nimport {\n  ScheduleCreate,\n  ScheduleEdit,\n  ScheduleIcon,\n  ScheduleList,\n} from \"./app/components/bookings/schedule\";\nimport Menu from \"./app/components/custom/CustomMenu\";\nimport customRoutes from \"./app/components/custom/customRoutes\";\nimport Dashboard from \"./app/components/Dashboard\";\nimport {\n  StockCreate,\n  StockEdit,\n  StockIcon,\n  StockList,\n} from \"./app/components/inventory/stock\";\nimport MyAppBar from \"./app/components/MyAppBar\";\nimport {\n  EmployeesCreate,\n  EmployeesEdit,\n  EmployeesIcon,\n  EmployeesList,\n} from \"./app/components/payroll/employees\";\nimport {\n  ProjectCreate,\n  ProjectEdit,\n  ProjectIcon,\n  ProjectList,\n} from \"./app/components/projects\";\nimport {\n  GrnCreate,\n  GrnEdit,\n  GrnIcon,\n  GrnList,\n} from \"./app/components/purchases/grn\";\nimport {\n  Purchase_orderCreate,\n  Purchase_orderEdit,\n  Purchase_orderIcon,\n  Purchase_orderList,\n} from \"./app/components/purchases/purchaseorders\";\nimport {\n  SupplierCreate,\n  SupplierEdit,\n  SupplierIcon,\n  SupplierList,\n} from \"./app/components/purchases/suppliers\";\nimport {\n  FpropCreate,\n  FpropEdit,\n  FpropIcon,\n  FpropList,\n} from \"./app/components/settings/Fprop\";\nimport {\n  UnitsCreate,\n  UnitsEdit,\n  UnitsIcon,\n  UnitsList,\n} from \"./app/components/units\";\nimport { UserList } from \"./app/components/users\";\n//import myDataProvider from './app/auth/dataProvider';\n//import authProvider from './app/auth/authProvider';\nimport basicAuthProvider from \"./app/providers/basicAuth\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1976d2\",\n    },\n    secondary: {\n      main: \"#3f51b5\",\n    },\n  },\n  spacing: 8,\n  sidebar: {\n    //root:{backgroundColor: '#fff',}\n  },\n  VoucherEntry: {\n    border: \"1px solid #ccc\",\n  },\n  overrides: {\n    MuiTableRow: {\n      root: {\n        height: 20,\n      },\n    },\n    MuiFormHelperText: {\n      contained: {\n        display: \"none\",\n      },\n      marginDense: {\n        display: \"none\",\n      },\n    },\n\n    MuiFilledInput: {\n      root: { backgroundColor: \"#1976d20f\" },\n    },\n    RaSidebar: {\n      // boxShadow:\n      //     \"2px 0px 1px -1px rgba(0,0,0,0.2), 1px 0px 3px 0px rgba(0,0,0,0.1)\",\n      drawerPaper: {\n        backgroundColor: \"#022f5a\",\n        color: \"#ffffff\",\n        height: \"100%\",\n        paddingTop: \"1em\",\n        \"@media (min-width: 0px)\": {\n          backgroundColor: \"#022f5a\",\n        },\n      },\n    },\n    RaCreate: {\n      noActions: {\n        marginTop: 0,\n        \"@media (min-width: 600px)\": {\n          marginTop: 0,\n        },\n      },\n    },\n    RaSimpleFormIterator: {\n      form: {\n        \"@media (min-width: 600px)\": {\n          display: \"flex\",\n          flexFlow: \"row wrap\",\n        },\n\n        paddingBottom: \"1rem\",\n        paddingTop: \"0.5rem\",\n        //justifyContent: \"space-evenly\",\n      },\n      RaFormInput: {\n        input: {\n          width: \"100%\",\n        },\n      },\n      line: {\n        borderBottom: \"solid 2px rgb(25 118 210)\",\n      },\n    },\n    RaLayout: {\n      content: {\n        //paddingTop: '2em',\n        paddingTop: \"1em\",\n      },\n    },\n    RaList: {\n      root: {\n        border: \"1px solid #e0e0e3\",\n        backgroundColor: \"#fcfcfc\",\n        color: \"#fff\",\n        padding: \"10px\",\n      },\n    },\n    RaEdit: {\n      root: {\n        border: \"1px solid #e0e0e3\",\n        backgroundColor: \"#fcfcfc\",\n        color: \"#fff\",\n        padding: \"10px\",\n      },\n      noActions: {\n        marginTop: 0,\n        \"@media (min-width: 600px)\": {\n          marginTop: 0,\n        },\n      },\n      RaTopToolbar: {\n        root: { padding: \"0px\" },\n      },\n    },\n    RaDatagrid: {\n      headerCell: {\n        backgroundColor: \"#1976d2\",\n        color: \"#fff\",\n        height: \"2.5em\",\n        boxShadow: \"0 2px 0 rgba(0,0,0,0.05)\",\n      },\n    },\n\n    MuiDivider: {\n      light: { backgroundColor: \"#6868681f\" },\n    },\n    RaMenuItemLink: {\n      root: {\n        color: \"#fff\",\n        \"&:hover\": {\n          background: \"#007eff\",\n        },\n      },\n\n      active: {\n        borderLeftStyle: \"solid\",\n        backgroundColor: \"#007eff\",\n        borderRightStyle: \"solid\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n      },\n      icon: {\n        color: \"inherit\",\n      },\n    },\n  },\n\n  typography: {\n    fontFamily: [\n      \"Helvetica\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nconst useSidebarStyles = makeStyles({});\nconst MySidebar = (props) => {\n  const classes = useSidebarStyles();\n  return <Sidebar {...props} />;\n};\n//const MyAppBar = props => <AppBar {...props} userMenu={<MyUserMenu />} color=\"primary\" />;\n\nconst MyLayout = (props) => (\n  <Layout {...props} appBar={MyAppBar} sidebar={MySidebar} menu={Menu} />\n);\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://firdouserp.pk/\">\n        FirdousERP\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst MyLoginPage = () => (\n  <Login\n    // A random image that changes everyday\n    backgroundImage=\"https://source.unsplash.com/random/1600x900/daily\"\n  />\n);\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n  const { token } = JSON.parse(localStorage.getItem(\"jwtToken\"));\n\n  options.headers.set(\"Authorization\", `Bearer ${token}`);\n\n  let json = fetchUtils.fetchJson(url, options);\n  //   json.then(function(result) {\n  //     console.log(result) // \"Some User token\"\n  //  })\n  return json;\n};\nconst dataProvider = simpleRestProvider(\n  \"http://localhost:2000/api/v1\",\n  httpClient\n);\n\nconst messages = {\n  en: englishMessages,\n};\n\nconst i18nProvider = polyglotI18nProvider((locale) => messages[locale], \"en\", {\n  allowMissing: true,\n});\n\nconst App = () => (\n  <Admin\n    disableTelemetry\n    //i18nProvider={i18nProvider}\n    customRoutes={customRoutes}\n    theme={theme}\n    layout={MyLayout}\n    loginPage={MyLoginPage}\n    dashboard={Dashboard}\n    authProvider={basicAuthProvider}\n    dataProvider={dataProvider}\n  >\n    <Resource\n      name=\"Projects\"\n      list={ProjectList}\n      create={ProjectCreate}\n      edit={ProjectEdit}\n      icon={ProjectIcon}\n    />\n    <Resource\n      name=\"grn\"\n      list={GrnList}\n      create={GrnCreate}\n      edit={GrnEdit}\n      icon={GrnIcon}\n    />\n    <Resource\n      name=\"Booking\"\n      list={BookingList}\n      create={BookingFormWizard}\n      edit={BookingEdit}\n      icon={BookingIcon}\n      show={BookingsShow}\n      options={{ label: \"Bookings\", menu: \"false\" }}\n    />\n    <Resource\n      name=\"fprop\"\n      list={FpropList}\n      create={FpropCreate}\n      edit={FpropEdit}\n      icon={FpropIcon}\n      options={{ label: \"Properties\", menu: \"true\" }}\n    />\n    <Resource\n      name=\"purchaseorder\"\n      list={Purchase_orderList}\n      create={Purchase_orderCreate}\n      edit={Purchase_orderEdit}\n      icon={Purchase_orderIcon}\n      options={{ label: \"Purchase Orders\", menu: \"false\" }}\n    />\n\n    <Resource\n      name=\"suppliers\"\n      list={SupplierList}\n      create={SupplierCreate}\n      edit={SupplierEdit}\n      icon={SupplierIcon}\n      options={{ label: \"Suppliers\", menu: \"false\" }}\n    />\n    <Resource\n      name=\"Units\"\n      list={UnitsList}\n      create={UnitsCreate}\n      edit={UnitsEdit}\n      icon={UnitsIcon}\n    />\n    <Resource\n      name=\"Stock\"\n      list={StockList}\n      create={StockCreate}\n      edit={StockEdit}\n      icon={StockIcon}\n    />\n    <Resource\n      name=\"coa\"\n      options={{ label: \"Chart of Accounts\", menu: \"false\" }}\n      list={CoaList}\n      create={CoaCreate}\n      edit={CoaEdit}\n      icon={CoaIcon}\n    />\n    <Resource\n      name=\"coa_type\"\n      options={{ label: \"Account Types\", menu: \"false\" }}\n      list={Coa_typeList}\n      create={Coa_typeCreate}\n      edit={Coa_typeEdit}\n      icon={Coa_typeIcon}\n    />\n    <Resource\n      name=\"notes\"\n      options={{ label: \"Notes\", menu: \"false\" }}\n      list={NotesList}\n      create={NotesCreate}\n      edit={NotesEdit}\n      icon={NotesIcon}\n    />\n    <Resource\n      name=\"vouchers\"\n      options={{ label: \"Vouchers\", menu: \"false\" }}\n      list={VouchersList}\n      create={VouchersCreate}\n      edit={VouchersEdit}\n      show={VouchersShow}\n      icon={VouchersIcon}\n    />\n\n    <Resource\n      name=\"Employees\"\n      list={EmployeesList}\n      create={EmployeesCreate}\n      edit={EmployeesEdit}\n      icon={EmployeesIcon}\n    />\n    <Resource\n      name=\"Schedule\"\n      list={ScheduleList}\n      create={ScheduleCreate}\n      edit={ScheduleEdit}\n      icon={ScheduleIcon}\n      options={{ label: \"Schedules\", menu: \"false\" }}\n    />\n\n    <Resource name=\"Users\" list={UserList} />\n    <Resource name=\"Userform\" />\n  </Admin>\n);\n\nexport default App;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\MyAppBar.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\users.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\units.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Dashboard.js",["199"],"import { Grid } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport * as React from \"react\";\nimport { Title } from 'react-admin';\nimport DummyChart from './charts/DummyChart';\nimport VouchersChart from './charts/VouchersChart';\n\n\nexport default () => (\n    <Card style={{ height: '100%' }}>\n        <Title title=\"Welcome to the Firdous ERP\" />\n        <CardContent>\n            <Grid container spacing={6}>\n                <Grid item xs={12} md={6}>\n                    <DummyChart />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <VouchersChart />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\projects.js",["200","201","202"],"import { Grid, useMediaQuery } from '@material-ui/core';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport * as React from \"react\";\nimport { BooleanInput, Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar, useNotify, useRedirect, useRefresh } from 'react-admin';\n\nexport const ProjectIcon = ApartmentIcon;\n\nexport const ProjectActions = ({ basePath, data }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n    {/* <ShowButton basePath={basePath} record={data} /> */}\n  </TopToolbar>\n);\n\n\nconst ProjectSearchFilter = (props) => (\n\n  <Filter {...props}>\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\n  </Filter>\n\n);\n\nexport const ProjectList = props => (\n  <List filters={<ProjectSearchFilter />} {...props}>\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\n      <SimpleList\n        primaryText={record => record.title}\n        secondaryText={record => `${record.code}`}\n        tertiaryText={record => record.id}\n\n      />\n    ) : (\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"code\" />\n          <TextField source=\"scode\" />\n          <TextField source=\"title\" />\n          <TextField source=\"location\" />\n          <TextField source=\"nature\" />\n          <TextField source=\"remarks\" />\n          <TextField source=\"active\" />\n          <EditButton variant=\"contained\" color=\"secondary\" />\n          <DeleteButton />\n        </Datagrid>)}\n  </List>\n);\n\nconst ProjectTitle = ({ record }) => {\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const ProjectEdit = (props) => (\n  <Edit undoable={false} title={<ProjectTitle />} {...props}>\n\n    <SimpleForm\n      variant={\"standard\"}\n      sanitizeEmptyValues={false}\n      margin=\"none\"\n      fullWidth\n    >\n      <Grid container display=\"flex\" fullWidth spacing={1}>\n        <Grid item xs={12} md={4}>\n          <TextInput disabled source=\"id\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput disabled source=\"code\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"scode\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput multiline source=\"title\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"location\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"city\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"client\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"cost\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"country\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"nature\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"remarks\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <BooleanInput source=\"active\" fullWidth />\n        </Grid>\n\n\n      </Grid>\n    </SimpleForm>\n\n  </Edit>\n);\n\nexport const ProjectCreate = (props) => {\n\n  const notify = useNotify();\n  const refresh = useRefresh();\n  const redirect = useRedirect();\n  const onFailure = (error) => {\n\n\n    notify(`Could not edit post: ${error}`)\n  };\n\n  return (\n    <Create title=\"New Project\" {...props}>\n      <SimpleForm\n        variant={\"standard\"}\n        sanitizeEmptyValues={false}\n        margin=\"none\"\n        fullWidth\n      >\n        <Grid container display=\"flex\" fullWidth spacing={1}>\n          <Grid item xs={12} md={4}>\n            <TextInput disabled source=\"id\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput disabled source=\"code\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"scode\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput multiline source=\"title\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"location\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"city\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"client\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"cost\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"country\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"nature\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"remarks\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <BooleanInput source=\"active\" fullWidth />\n          </Grid>\n\n\n        </Grid>\n      </SimpleForm>\n    </Create>\n  )\n};","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\providers\\basicAuth.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\suppliers.js",["203"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport * as React from \"react\";\nimport { BooleanField, BooleanInput, Create, Datagrid, DateField, DeleteButton, Edit, EditButton, Filter, FormTab, List, ListButton, ReferenceManyField, SearchInput, SimpleForm, SimpleList, TabbedForm, TextField, TextInput, TopToolbar } from 'react-admin';\n\n\nconst useStyles = makeStyles({\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\n});\n\nexport const SupplierActions = ({ basePath, data }) => (\n  <TopToolbar variant=\"contained\" >\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} variant=\"contained\" color=\"secondary\" />\n    {/* <ShowButton basePath={basePath} record={data} /> */}\n  </TopToolbar>\n);\n\nexport const SupplierIcon = TransferWithinAStationIcon;\n\nconst SupplierSearchFilter = (props) => (\n\n  <Filter {...props}>\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\n  </Filter>\n\n);\n\nexport const SupplierList = (props) => (\n  <List undoable={false} filters={<SupplierSearchFilter />} {...props} >\n\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\n      <SimpleList\n        primaryText={record => record.title}\n        secondaryText={record => `${record.code}`}\n        tertiaryText={record => record.id}\n\n      />\n    ) : (\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"code\" />\n          <TextField source=\"scode\" />\n          <TextField source=\"title\" />\n          <BooleanField source=\"active\" />\n          <TextField source=\"nature\" />\n          <EditButton variant=\"contained\" color=\"secondary\" />\n          <DeleteButton />\n        </Datagrid>)}\n  </List>\n);\n\nconst SupplierTitle = ({ record }) => {\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const SupplierEdit = props => {\n  return (\n    <Edit undoable={false} title={<SupplierTitle />} {...props}>\n\n\n      <TabbedForm initialValues={{}}\n        variant={\"standard\"}\n        sanitizeEmptyValues={false}\n        margin=\"none\"\n        fullWidth\n      >\n        <FormTab label=\"Supplier Detail\">\n          <Grid container display=\"flex\" fullWidth spacing={1}>\n            <Grid item xs={12} md={4}>\n              <TextInput disabled source=\"id\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput disabled source=\"code\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"scode\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput multiline source=\"title\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"person\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"contact\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"address\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"country\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"city\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"email\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"fax\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"cnic\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"ntn\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"stn\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"businesstitle\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextInput source=\"nature\" fullWidth />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <BooleanInput source=\"active\" fullWidth />\n            </Grid>\n\n\n          </Grid>\n        </FormTab>\n        <FormTab label=\"Purchase Orders\">\n          <ReferenceManyField\n            reference=\"purchaseorder\"\n            target=\"supplier_id\"\n            addLabel={false}\n            fullWidth\n          >\n            <Datagrid>\n              <TextField source=\"po_no\" />\n              <DateField source=\"purchase_date\" />\n              <TextField source=\"project_id\" />\n              <TextField source=\"status\" />\n              <DateField source=\"created_on\" />\n              <EditButton />\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n      </TabbedForm>\n\n\n\n    </Edit>\n  )\n};\n\nexport const SupplierCreate = (props) => (\n  <Create title=\"New Suppier\" {...props}>\n    <SimpleForm\n      variant={\"standard\"}\n      sanitizeEmptyValues={false}\n      margin=\"none\"\n      fullWidth\n    >\n      <Grid container display=\"flex\" fullWidth spacing={1}>\n        <Grid item xs={12} md={4}>\n          <TextInput disabled source=\"id\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput disabled source=\"code\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"scode\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput multiline source=\"title\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"person\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"contact\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"address\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"country\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"city\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"email\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"fax\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"cnic\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"ntn\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"stn\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"businesstitle\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"nature\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <BooleanInput source=\"active\" fullWidth />\n        </Grid>\n\n\n      </Grid>\n    </SimpleForm>\n  </Create>\n\n);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\purchaseorders.js",["204","205","206","207","208","209"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport * as React from \"react\";\nimport {\n  ArrayInput,\n  Button,\n  Create,\n  Datagrid,\n  DateInput,\n  DeleteButton,\n  Edit,\n  EditButton,\n  Filter,\n  FormDataConsumer,\n  FormTab,\n  List,\n  ListButton,\n  NumberInput,\n  ReferenceField,\n  required,\n  SaveButton,\n  SearchInput,\n  SimpleForm,\n  SimpleFormIterator,\n  SimpleList,\n  TabbedForm,\n  TextField,\n  TextInput,\n  Toolbar,\n  TopToolbar,\n  useLocale,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport ReactToPrint from \"react-to-print\";\nimport FirdousSelect from \"../accounts/FirdousSelect\";\nimport PrintPOComponent from \"./PrintPOComponent\";\nexport const Purchase_orderIcon = StoreIcon;\nconst useStyles = makeStyles({\n  mr1: { marginRight: \"1em\" },\n  iteratorinput: {\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"18%\" },\n  },\n  iteratorinput50: {\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"15%\" },\n  },\n  iteratorinputdc: {\n    \"@media (min-width: 600px)\": { marginRight: \"1em\", width: \"50%\" },\n  },\n  po_item: {\n    \"@media (min-width: 600px)\": {\n      border: \"1px solid #ccc\",\n      width: \"95%\",\n      padding: \"1em\",\n      marginTop: \"2em\",\n    },\n  },\n});\nexport const Purchase_orderActions = ({ basePath, data }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n    {/* <ShowButton basePath={basePath} record={data} /> */}\n  </TopToolbar>\n);\nconst ra_required = [required()];\nconst Purchase_orderSearchFilter = (props) => (\n  <Filter {...props}>\n    <SearchInput\n      variant=\"standard\"\n      placeholder=\"PO No\"\n      source=\"po_no\"\n      alwaysOn\n    />\n    <DateInput\n      variant=\"standard\"\n      placeholder=\"Purchase Date\"\n      source=\"purchase_date\"\n      alwaysOn\n    />\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Project\"\n      source=\"project_id\"\n      optionText=\"title\"\n      list=\"projects\"\n      sort=\"title\"\n      resettable\n      alwaysOn\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Vendor\"\n      source=\"supplier_id\"\n      optionText=\"title\"\n      list=\"suppliers\"\n      sort=\"title\"\n      resettable\n    />\n  </Filter>\n);\n\nexport const Purchase_orderList = (props) => (\n  <List empty={false} filters={<Purchase_orderSearchFilter />} {...props}>\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\n      <SimpleList\n        primaryText={(record) => record.title}\n        secondaryText={(record) => `${record.code}`}\n        tertiaryText={(record) => record.id}\n      />\n    ) : (\n      <Datagrid rowClick=\"edit\">\n        <TextField source=\"id\" />\n        <TextField source=\"po_no\" />\n        <TextField source=\"purchase_date\" />\n        <ReferenceField\n          label=\"Project\"\n          source=\"project_id\"\n          reference=\"Projects\"\n        >\n          <TextField source=\"title\" />\n        </ReferenceField>\n        <ReferenceField\n          label=\"Supplier\"\n          source=\"supplier_id\"\n          reference=\"suppliers\"\n        >\n          <TextField source=\"title\" />\n        </ReferenceField>\n        <ReferenceField label=\"Status\" source=\"status\" reference=\"fprop\">\n          <TextField source=\"value\" />\n        </ReferenceField>\n        <TextField source=\"created_on\" />\n        <EditButton variant=\"contained\" color=\"secondary\" />\n        <DeleteButton />\n      </Datagrid>\n    )}\n  </List>\n);\nconst dateParser = (v) => {\n  // v is a string of \"YYYY-MM-DD\" format\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\n  if (match === null) return;\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\n  if (isNaN(d)) return;\n  return d;\n};\n\nconst dateFormatter = (v) => {\n  // v is a `Date` object\n  if (!(v instanceof Date) || isNaN(v)) return;\n  const pad = \"00\";\n  const yy = v.getFullYear().toString();\n  const mm = (v.getMonth() + 1).toString();\n  const dd = v.getDate().toString();\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\n};\nconst Purchase_orderTitle = ({ record }) => {\n  return <span>Order {record ? `\"${record.po_no}\"` : \"\"}</span>;\n};\n\nexport const Purchase_orderEdit = (props) => (\n  <Edit undoable={false} title={<Purchase_orderTitle />} {...props}>\n    <TabbedForm\n      toolbar={<CustomToolbar />}\n      initialValues={{}}\n      variant={\"standard\"}\n      sanitizeEmptyValues={false}\n      margin=\"none\"\n      fullWidth\n    >\n      <FormTab label=\"Purchase Order\">\n        <PO_FORM />\n      </FormTab>\n      <FormTab label=\"Goods Reciepts\"></FormTab>\n      <FormTab label=\"Supplier Bills\"></FormTab>\n    </TabbedForm>\n  </Edit>\n);\nconst UnitInput = (props) => {\n  const { values } = useFormState();\n  return (\n    <TextInput value={values.stock_id ? values.stock_id : \"\"} {...props} />\n  );\n};\nconst calcSubTotal = (scopedFormData) => {\n  if (scopedFormData) {\n    const total =\n      parseFloat(scopedFormData.unit_price || 0) *\n      parseFloat(scopedFormData.qty || 0);\n    console.log(\"scope data:\" + JSON.stringify(scopedFormData));\n    scopedFormData.subtotal = total;\n  }\n};\nexport const Purchase_orderCreate = (props) => {\n  return (\n    <Create undoable=\"false\" title=\"New Purchase Order\" {...props}>\n      <SimpleForm\n        //variant={\"outlined\"}\n        variant=\"standard\"\n        //sanitizeEmptyValues={false}\n        margin=\"none\"\n        fullWidth\n      >\n        <PO_FORM />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nconst CustomToolbar = (props) => {\n  const componentRef = React.useRef();\n  return (\n    <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <SaveButton undoable={false} {...props} />\n        </Grid>\n        <Grid item>\n          <ListButton\n            basePath={props.basePath}\n            label=\"Back\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n            icon={<ChevronLeft />}\n          />\n        </Grid>\n        <Grid item>\n          <ReactToPrint\n            trigger={() => {\n              // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n              // to the root node of the returned component as it will be overwritten.\n              return (\n                <Button\n                  disabled={!props.record.id}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  label=\"Print\"\n                  size=\"medium\"\n                  icon={<PrintIcon />}\n                />\n              );\n            }}\n            content={() => componentRef.current}\n          />\n          <div style={{ display: \"none\" }}>\n            {console.log(props)}\n            <PrintPOComponent ref={componentRef} {...props} />\n          </div>\n        </Grid>\n      </Grid>\n      <DeleteButton undoable={false} />\n    </Toolbar>\n  );\n};\n\nconst toCurrency = (number) => {\n  const formatter = new Intl.NumberFormat(\"de-DE\", {\n    style: \"currency\",\n    currency: \"EUR\",\n  });\n  console.log(\"format\" + formatter.format(number));\n  return formatter.format(number);\n};\n\nconst fromCurrency = (number) => {\n  return parseFloat(number);\n};\nconst PO_FORM = () => {\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"jwtToken\"));\n  const locale = useLocale();\n  return (\n    <div>\n      <Grid container display=\"flex\" spacing={1}>\n        <Grid item xs={12} md={3}>\n          <TextInput\n            variant=\"outlined\"\n            fullWidth\n            className={classes.mr1}\n            disabled\n            source=\"id\"\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextInput\n            variant=\"outlined\"\n            fullWidth\n            className={classes.mr1}\n            disabled\n            source=\"po_no\"\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <DateInput\n            variant=\"outlined\"\n            fullWidth\n            initialValue={new Date().toISOString().substring(0, 10)}\n            disabled\n            className={classes.mr1}\n            source=\"created_on\"\n            locales={locale}\n            // parse={dateParser}\n            // format={dateFormatter}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextInput\n            variant=\"outlined\"\n            fullWidth\n            className={classes.mr1}\n            initialValue={user && user.username}\n            disabled\n            source=\"created_by\"\n          />\n        </Grid>\n      </Grid>\n      <Grid container fullWidth spacing={1}>\n        <Grid item xs={12} md={4}>\n          <DateInput margin=\"none\" source=\"purchase_date\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <FirdousSelect\n            margin=\"none\"\n            label=\"Supplier\"\n            source=\"supplier_id\"\n            optionText=\"title\"\n            list=\"suppliers\"\n            sort=\"title\"\n            validate={ra_required}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <FirdousSelect\n            margin=\"none\"\n            label=\"Project\"\n            source=\"project_id\"\n            optionText=\"title\"\n            list=\"projects\"\n            sort=\"title\"\n            validate={ra_required}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"delivery_address\" fullWidth />\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <FirdousSelect\n            defaultValue=\"1\"\n            label=\"Status\"\n            source=\"status\"\n            optionText=\"value\"\n            list=\"fprop\"\n            sort=\"oid\"\n            validate={ra_required}\n            fullWidth\n            filter={{ type: \"purchaseorder\" }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextInput multiline source=\"description\" fullWidth />\n        </Grid>\n      </Grid>\n\n      <div className={classes.po_item}>\n        <ArrayInput\n          //initialValue={initial}\n          variant=\"standard\"\n          source=\"purchase_details\"\n          label=\"Items\"\n          fullWidth\n        >\n          <SimpleFormIterator fullWidth>\n            <FirdousSelect\n              resettable\n              label=\"Item\"\n              list=\"stock\"\n              source=\"stock_id\"\n              sort=\"title\"\n              optionText={\"title\"}\n              //validate={ra_required}\n              initialValue={1}\n              fullWidth\n              formClassName={classes.iteratorinput}\n            />\n\n            <UnitInput\n              label=\"Unit\"\n              source=\"unit\"\n              //validate={ra_required}\n              formClassName={classes.iteratorinput50}\n              fullWidth\n            />\n            <NumberInput\n              label=\"Quantity\"\n              source=\"qty\"\n              //validate={ra_required}\n              formClassName={classes.iteratorinput50}\n              fullWidth\n            />\n\n            <FormDataConsumer\n              subscription={{ values: true }}\n              className={classes.iteratorinputdc}\n            >\n              {({\n                formData, // The whole form data\n                scopedFormData, // The data for this item of the ArrayInput\n                getSource, // A function to get the valid source inside an ArrayInput\n                ...rest\n              }) => (\n                <NumberInput\n                  {...rest}\n                  label=\"Unit Price\"\n                  source={getSource(\"unit_price\")}\n                  //validate={ra_required}\n                  onChange={calcSubTotal(scopedFormData)}\n                  // format={toCurrency}\n                  //parse={fromCurrency}\n                  formClassName={classes.iteratorinput50}\n                  //className={classes.iteratorinput}\n                />\n              )}\n            </FormDataConsumer>\n            <TextInput\n              disabled\n              label=\"Sub Total\"\n              source=\"subtotal\"\n              //validate={ra_required}\n              // value={scopedFormData &&  parseFloat((scopedFormData.unit_price || 0) * (scopedFormData.quantity || 0))}\n              formClassName={classes.iteratorinput}\n              fullWidth\n            />\n          </SimpleFormIterator>\n        </ArrayInput>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\booking.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\Logo.js",["210"],"import React, { Component } from 'react';\nimport image from './ds_circle_logo.png';\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"logo-main\">\n        <img width=\"40px\" alt=\"daily smarty ui image logo big\" src={image} />\n      </div>\n    )\n  }\n}\n\nexport default Logo;","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherShow.js",["211","212","213","214","215"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useShowController } from \"react-admin\";\nimport Voucher from \"./VoucherPrint\";\n\nconst VoucherShow = (props) => {\n  const {\n    basePath, // deduced from the location, useful for action buttons\n    defaultTitle, // the translated title based on the resource, e.g. 'Post #123'\n    loaded, // boolean that is false until the record is available\n    loading, // boolean that is true on mount, and false once the record was fetched\n    record, // record fetched via dataProvider.getOne() based on the id from the location\n    resource, // the resource name, deduced from the location. e.g. 'posts'\n    version, // integer used by the refresh feature\n  } = useShowController(props);\n  console.log(record);\n  if (!loaded) {\n    return <CircularProgress />;\n  }\n  return (\n    <Voucher\n      voucher={{ ...record }}\n      // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\n      //customer={{}}\n      company={{ name: \"Firdous ERP\", logoUrl: \"%PUBLIC_URL%/firdouslogo.png\" }}\n      notes={\"Here comes the Remarks\"}\n    />\n  );\n};\n\nexport default VoucherShow;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\charts\\DummyChart.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\charts\\VouchersChart.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\Accounts.js",["216","217"],"import { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  JournalVoucher: {\n    backgroundColor: \"#64b5f6\",\n    color: \"white\",\n    hover: {\n      color: \"red\",\n    },\n  },\n  PaymentVoucher: {\n    backgroundColor: \"#7b1fa2\",\n    color: \"white\",\n  },\n  SalesVoucher: {\n    backgroundColor: \"#aa00ff\",\n    color: \"white\",\n  },\n  RecieptVoucher: {\n    backgroundColor: \"#00897b\",\n    color: \"white\",\n  },\n  SalaryVoucher: {\n    backgroundColor: \"#ff5252\",\n    color: \"white\",\n  },\n}));\n\nfunction SimplePaper() {\n  const classes = useStyles();\n\n  return (\n    <Grid container display=\"flex\" spacing={2}>\n      <Grid item xs={12} sm={3}>\n        <Typography variant=\"h6\" gutterBottom>\n          Vocuchers Menu\n        </Typography>\n        <Grid item xs={12}></Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/vouchers\"\n              label=\"Voucher Listing\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/coa\"\n              label=\"Chart of Accounts\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/notes\"\n              label=\"Account Heads\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/coa_type\"\n              label=\"Account Types\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/deleted\"\n              label=\"Deleted Vouchers\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} sm={3}>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              Create Vocuchers\n            </Typography>\n            <AccountButton\n              target=\"/vouchers/create?vou_type=1\"\n              label=\"Journal Voucher\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/vouchers/create?vou_type=2\"\n              label=\"Payment Voucher\"\n              stylename={classes.PaymentVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/vouchers/create?vou_type=4\"\n              label=\"Sales Voucher\"\n              stylename={classes.SalesVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/vouchers/create?vou_type=3\"\n              label=\"Reciept Voucher\"\n              stylename={classes.RecieptVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/vouchers/create?vou_type=5\"\n              label=\"Salary Voucher\"\n              stylename={classes.SalaryVoucher}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nconst Accounts = () => {\n  useAuthenticated();\n  const { loading, authenticated } = useAuthState();\n\n  return (\n    <Card>\n      <Title title=\"Accounts\" />\n      <CardContent>{SimplePaper()}</CardContent>\n    </Card>\n  );\n};\n\nexport const AccountButton = (props) => {\n  return (\n    <Paper\n      className={props.stylename}\n      //style={{ minHeight: \"100px\" ,maxWidth:\"150px\"}}\n      variant=\"outlined\"\n      square\n    >\n      <CardActions>\n        <Button\n          className={props.stylename}\n          to={props.target}\n          component={Link}\n          size=\"large\"\n          color=\"primary\"\n        >\n          {props.label}\n        </Button>\n      </CardActions>\n    </Paper>\n  );\n};\n\nexport default Accounts;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js",["218","219","220","221","222"],"import { Box, Grid, makeStyles } from \"@material-ui/core\";\nimport { ChevronLeft } from \"@material-ui/icons\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport * as React from \"react\";\nimport {\n  ArrayInput,\n  Button,\n  DateInput,\n  DeleteButton,\n  ListButton,\n  NumberInput,\n  required,\n  SaveButton,\n  SelectInput,\n  SimpleForm,\n  SimpleFormIterator,\n  TextInput,\n  Toolbar,\n} from \"react-admin\";\nimport { useFormState } from \"react-final-form\";\nimport ReactToPrint from \"react-to-print\";\nimport FirdousSelect from \"./FirdousSelect\";\nimport PrintVoucherComponent from \"./PrintVoucherComponent\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  inlineBlock: { display: \"inline-flex\", marginRight: \"1em\", width: \"40%\" },\n  iteratorinput: { marginRight: \"0.5em\", width: \"30%\" },\n\n  width20: {\n    \"@media (min-width: 600px)\": {\n      marginRight: \"0.5em\",\n      width: \"20%\",\n    },\n  },\n  width25: { marginRight: \"0.5em\", width: \"25%\" },\n  width30: { marginRight: \"0.5em\", width: \"30%\" },\n  width35: {\n    \"@media (min-width: 600px)\": {\n      marginRight: \"0.5em\",\n      width: \"35%\",\n    },\n  },\n  formBox: {\n    display: \"flex\",\n    //flexGrow: \"2\",\n    width: \"100%\",\n  },\n  width40: { marginRight: \"0.5em\", width: \"40%\" },\n  width50: { marginRight: \"0.5em\", width: \"62%\" },\n  alightRight: { marginRight: \"0.5em\", width: \"20%\" },\n\n  maxFixedWidth: { maxWidth: \"180px\", boxSizing: \"border-box\" },\n  fixedWidth: { width: \"180px\" },\n  BorderandBackgroundIter: {\n    border: \"1px solid #ccc\",\n    padding: \"1em\",\n  },\n  VoucherEntry: {\n    border: \"1px solid #ccc\",\n    minWidth: \"870px\",\n    maxWidth: \"1000px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  BorderandBackground: {\n    //border: \"1px solid #ccc\",\n    //backgroundColor: \"#1976d20f\",\n    margin: \"2px\",\n    fontWeight: \"bold\",\n    MuiFormHelperText: {\n      contained: {\n        display: \"none\",\n      },\n      marginDense: {\n        display: \"none\",\n      },\n    },\n    MuiFormControl: {\n      root: { border: \"1px solid #ccc\" },\n    },\n\n    MuiFilledInput: {\n      root: { backgroundColor: \"#1976d20f\" },\n    },\n  },\n});\n\nconst validateVoucherCreation = (values) => {\n  const errors = {};\n  console.log(\"values:\" + JSON.stringify(values));\n  if (values.vou_type == 5 && !values.employee) {\n    errors.employee = [\"The Employee is required\"];\n  }\n\n  if (!values.transactions || values.transactions.length == 0) {\n    errors.total_debit = [\"Please Enter the Transactions\"];\n  } else {\n    values.transactions.map((transaction) => {\n      (!transaction &&\n        (errors.total_debit = [\"Please Enter the Transactions\"])) ||\n        (!transaction.coa &&\n          (errors.total_debit = [\"Please select transaction account\"])) ||\n        ((!transaction.dr || transaction.dr === 0) &&\n          (!transaction.cr || transaction.cr === 0) &&\n          (errors.total_debit = [\n            \"Debit and Credit of a transaction cant be Zero\",\n          ]));\n    });\n  }\n  return errors;\n};\n\nconst ra_required = [required()];\nconst dateFormatter = (v) => {\n  // v is a `Date` object\n  if (!(v instanceof Date) || isNaN(v)) return;\n  const pad = \"00\";\n  const yy = v.getFullYear().toString();\n  const mm = (v.getMonth() + 1).toString();\n  const dd = v.getDate().toString();\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\n};\n\nconst dateParser = (v) => {\n  // v is a string of \"YYYY-MM-DD\" format\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\n  if (match === null) return;\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\n  if (isNaN(d)) return;\n  return d;\n};\nexport const VoucherEntryForm = ({ ...props }) => {\n  const classes = useStyles();\n  const initial = [\n    { coa: \"\", dr: 0, cr: 0 },\n    { coa: \"\", dr: 0, cr: 0 },\n  ];\n\n  const vou_types = [\n    { id: 1, title: \"Journal Voucher\" },\n    { id: 2, title: \"Payment Voucher\" },\n    { id: 3, title: \"Reciept Voucher\" },\n    { id: 4, title: \"Sales Voucher\" },\n    { id: 5, title: \"Salary Voucher\" },\n    { id: 6, title: \"Inventory Voucher\" },\n  ];\n  const optionRenderer = (choice) => {\n    return choice && ` ${choice.title} ${choice.scode || \"\"}  ${choice.code}`;\n  };\n\n  const calculateSum = (values, source, field) => {\n    let sum = 0;\n    if (values && values.transactions) {\n      values.transactions.map(\n        (transaction) =>\n          transaction &&\n          (sum = parseFloat(sum || 0) + parseFloat(transaction[field] || 0))\n      );\n      values[source] = parseFloat(sum || 0);\n    }\n    return sum;\n  };\n\n  const TotalInput = (props) => {\n    const { values } = useFormState();\n    return (\n      <NumberInput\n        disabled\n        variant=\"standard\"\n        source={parseFloat(props.source || 0)}\n        value={calculateSum(values, props.source, props.field)}\n        {...props}\n      />\n    );\n  };\n\n  const CustomToolbar = (props) => {\n    const componentRef = React.useRef();\n    return (\n      <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <SaveButton undoable={false} {...props} />\n          </Grid>\n          <Grid item>\n            <ListButton\n              basePath={props.basePath}\n              label=\"Back\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"medium\"\n              icon={<ChevronLeft />}\n            />\n          </Grid>\n          <Grid item>\n            <ReactToPrint\n              trigger={() => {\n                // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n                // to the root node of the returned component as it will be overwritten.\n                return (\n                  <Button\n                    disabled={!props.record.id}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    label=\"Print\"\n                    size=\"medium\"\n                    icon={<PrintIcon />}\n                  />\n                );\n              }}\n              content={() => componentRef.current}\n            />\n            <div style={{ display: \"none\" }}>\n              {console.log(props)}\n              <PrintVoucherComponent ref={componentRef} {...props} />\n            </div>\n          </Grid>\n        </Grid>\n        <DeleteButton undoable={false} />\n      </Toolbar>\n    );\n  };\n  return (\n    <SimpleForm\n      toolbar={<CustomToolbar />}\n      className={classes.VoucherEntry}\n      validate={validateVoucherCreation}\n      fullWidth\n      redirect=\"show\"\n      {...props}\n    >\n      <Grid container fullWidth spacing={1} display=\"flex\">\n        <Grid pr={8} item xs={12} sm={4} md={3}>\n          <SelectInput\n            variant=\"outlined\"\n            margin=\"none\"\n            label=\"Voucher Type\"\n            source=\"vou_type\"\n            initialValue={props.vou_type}\n            optionText=\"title\"\n            optionValue=\"id\"\n            choices={vou_types}\n            validate={ra_required}\n            fullWidth\n            className={classes.BorderandBackground}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={4} md={3}>\n          <TextInput\n            margin=\"none\"\n            disabled\n            source=\"vou_no\"\n            //    resource=\"vouchers\"\n            fullWidth\n            className={classes.BorderandBackground}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} md={3}>\n          <DateInput\n            //initialValue={new Date().toLocaleDateString()}\n            margin=\"none\"\n            variant=\"outlined\"\n            source=\"vou_date\"\n            //resource=\"vouchers\"\n            validate={ra_required}\n            autoFocus\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n            fullWidth\n            className={classes.BorderandBackground}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} md={3}>\n          <TextInput\n            variant=\"outlined\"\n            margin=\"none\"\n            label=\"Chq.no\"\n            source=\"chq_no\"\n            //resource=\"vouchers\"\n            fullWidth\n            className={classes.BorderandBackground}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <DateInput\n            variant=\"outlined\"\n            margin=\"none\"\n            label=\"Chq.date\"\n            source=\"chq_date\"\n            resource=\"vouchers\"\n            fullWidth\n            className={classes.BorderandBackground}\n          />\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <TextInput\n            variant=\"outlined\"\n            margin=\"none\"\n            source=\"remarks\"\n            //resource=\"vouchers\"\n            //validate={ra_required}\n            multiline\n            fullWidth\n            className={classes.BorderandBackground}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Box className={classes.formBox}>\n            <ArrayInput\n              initialValue={initial}\n              variant=\"standard\"\n              source=\"transactions\"\n              label=\"Transactions\"\n              fullWidth\n              className={classes.BorderandBackgroundIter}\n              marginTop=\"none\"\n            >\n              <SimpleFormIterator fullWidth>\n                <FirdousSelect\n                  resettable\n                  label=\"Account\"\n                  list=\"coa\"\n                  source=\"coa\"\n                  sort=\"code\"\n                  optionText={optionRenderer}\n                  //validate={ra_required}\n                  //initialValue={1}\n                  //resource=\"vouchers\"\n                  fullWidth\n                  formClassName={classes.width35}\n                  className={classes.BorderandBackground}\n                  // margin=\"none\"\n                />\n\n                <FirdousSelect\n                  margin=\"none\"\n                  label=\"Project\"\n                  source=\"project\"\n                  optionText=\"title\"\n                  list=\"projects\"\n                  sort=\"title\"\n                  validate={ra_required}\n                  fullWidth\n                  initialValue={1}\n                  formClassName={classes.width20}\n                  className={classes.BorderandBackground}\n                />\n                <NumberInput\n                  //formClassName={classes.iteratorinput50}\n                  //className={classes.fixedWidth}\n                  label=\"Debit\"\n                  source=\"dr\"\n                  // resource=\"vouchers\"\n                  //validate={ra_required}\n\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width20}\n                  fullWidth\n                />\n\n                <NumberInput\n                  //className={classes.fixedWidth}\n                  label=\"Credit\"\n                  source=\"cr\"\n                  //resource=\"vouchers\"\n                  //validate={ra_required}\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width20}\n                  fullWidth\n                />\n                <TextInput\n                  margin=\"none\"\n                  label=\"RefNo.\"\n                  source=\"refno\"\n                  //resource=\"vouchers\"\n                  fullWidth\n                  formClassName={classes.width35}\n                  className={classes.BorderandBackground}\n                />\n                <TextInput\n                  variant=\"outlined\"\n                  margin=\"none\"\n                  source=\"description\"\n                  //resource=\"vouchers\"\n                  label=\"Description\"\n                  validate={ra_required}\n                  multiline\n                  fullWidth\n                  formClassName={classes.width50}\n                  className={classes.BorderandBackground}\n                />\n                <FirdousSelect\n                  margin=\"none\"\n                  allowEmpty\n                  label=\"Vendor\"\n                  list=\"suppliers\"\n                  sort=\"title\"\n                  source=\"supplier\"\n                  optionText=\"title\"\n                  fullWidth\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width35}\n                />\n\n                <FirdousSelect\n                  margin=\"none\"\n                  allowEmpty\n                  label=\"Unit\"\n                  source=\"unit\"\n                  optionText=\"title\"\n                  list=\"units\"\n                  sort=\"title\"\n                  fullWidth\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width20}\n                />\n\n                <FirdousSelect\n                  margin=\"none\"\n                  allowEmpty\n                  label=\"Stock\"\n                  source=\"stock\"\n                  optionText=\"title\"\n                  list=\"stock\"\n                  sort=\"title\"\n                  fullWidth\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width20}\n                />\n\n                <FirdousSelect\n                  margin=\"none\"\n                  allowEmpty\n                  label=\"Employee\"\n                  source=\"employee\"\n                  optionText=\"title\"\n                  list=\"employees\"\n                  sort=\"title\"\n                  fullWidth\n                  className={classes.BorderandBackground}\n                  formClassName={classes.width20}\n                  //className={classes.maxFixedWidth}\n                />\n\n                {/* <TextInput formClassName={classes.inlineBlock} label =\"Description\" source=\"description\" resource=\"vouchers\" multiline fullWidth margin=\"none\"/> */}\n              </SimpleFormIterator>\n            </ArrayInput>\n          </Box>\n          <Grid container display=\"flex\" fullWidth>\n            {/* <Grid item xs=\"6\" align=\"right\">\n              <TextInput\n                margin=\"none\"\n                label=\"Remarks\"\n                source=\"remarks\"\n                //resource=\"vouchers\"\n                multiline\n                fullWidth\n                className={classes.BorderandBackground}\n              />\n            </Grid> */}\n            <Grid item xs=\"12\" align=\"right\">\n              <TotalInput\n                variant=\"outlined\"\n                margin=\"none\"\n                source=\"total_debit\"\n                field=\"dr\"\n              />\n              <TotalInput\n                variant=\"outlined\"\n                margin=\"none\"\n                source=\"total_credit\"\n                field=\"cr\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </SimpleForm>\n  );\n};\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\Purchases.js",["223","224"],"import { Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\nimport { AccountButton } from \"../accounts/Accounts\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  JournalVoucher: {\n    backgroundColor: \"#64b5f6\",\n    color: \"white\",\n    hover: {\n      color: \"red\",\n    },\n  },\n  PaymentVoucher: {\n    backgroundColor: \"#7b1fa2\",\n    color: \"white\",\n  },\n  SalesVoucher: {\n    backgroundColor: \"#aa00ff\",\n    color: \"white\",\n  },\n  RecieptVoucher: {\n    backgroundColor: \"#00897b\",\n    color: \"white\",\n  },\n  SalaryVoucher: {\n    backgroundColor: \"#ff5252\",\n    color: \"white\",\n  },\n}));\n\nfunction SimplePaper() {\n  const classes = useStyles();\n\n  return (\n    <Grid container display=\"flex\" spacing={2}>\n      <Grid item xs={12} sm={3}>\n        <Typography variant=\"h6\" gutterBottom>\n          Purchase Menu\n        </Typography>\n        <Grid item xs={12}></Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/suppliers\"\n              label=\"Suppliers\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/purchaseorder\"\n              label=\"Purchase Orders\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/grn\"\n              label=\"Goods Receipt Notes (GRN)\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/bills\"\n              label=\"Bills\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nconst Purchases = () => {\n  useAuthenticated();\n  const { loading, authenticated } = useAuthState();\n\n  return (\n    <Card>\n      <Title title=\"Purchases\" />\n      <CardContent>{SimplePaper()}</CardContent>\n    </Card>\n  );\n};\n\nexport default Purchases;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js",["225","226","227"],"import { Box, Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { BooleanInput, Button, DateInput, required, TextInput, Toolbar } from \"react-admin\";\nimport FirdousSelect from \"../accounts/FirdousSelect\";\nclass BookingDetailsForm extends Component {\n  \n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { booking, step, handleChange } = this.props;\n    const small = 6;\n    const xsmall = 12;\n    const medium = 6;\n    const styles = {\n      button: {\n        margin: 15,\n      },\n    };\n    const ra_required = [required()];\n\n    if (step == 1) {\n      return (\n        <Box p=\"1em\">\n          <Typography variant=\"h6\" gutterBottom>\n            Booking Details\n          </Typography>\n          <div>\n            <Grid container spacing={10}>\n              <Grid spacing={1} id=\"left-container\" item xs={xsmall} md={4}>\n                <Typography variant=\"h7\" gutterBottom>\n                  Unit Allotment\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput disabled source=\"id\" fullWidth onBlur={handleChange} />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"client\"\n                      defaultValue={booking.client}\n                      fullWidth onBlur={handleChange} onBlur={handleChange}\n\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                     <FirdousSelect\n                       margin=\"projects\"\n                      label=\"projects\"\n                    source=\"projects\"\n                      optionText=\"title\"\n                    list=\"projects\"\n                    sort=\"title\"\n                  validate={ra_required}\n                    fullWidth\n                          \n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput disabled source=\"code\" fullWidth onBlur={handleChange} />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"scode\"\n                      fullWidth onBlur={handleChange} /*options={{ multiLine: true }}*/\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput fullWidth onBlur={handleChange} multiline source=\"title\" />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                  <FirdousSelect\n                margin=\"none\"\n                label=\"units\"\n                source=\"unit\"\n                optionText=\"title\"\n                list=\"units\"\n                sort=\"title\"\n                validate={ra_required}\n                  fullWidth\n                          \n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\n                    <DateInput\n                      source=\"book_date\"\n                      defaultValue={booking.book_date}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"sale_price\"\n                      defaultValue={booking.sale_price}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall}>\n                    <TextInput\n                      source=\"remarks\"\n                      defaultValue={booking.remarks}\n                      fullWidth onBlur={handleChange}\n                      multiline\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid spacing={1} id=\"right-container\" item xs={xsmall} md={6}>\n                <Typography variant=\"h7\" gutterBottom>\n                  Booking Allottee\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\n                    <TextInput\n                      source=\"name\"\n                      defaultValue={booking.name}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"father_name\"\n                      defaultValue={booking.father_name}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"cnic\"\n                      defaultValue={booking.cnic}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"phone_no\"\n                      defaultValue={booking.phone_no}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall}>\n                    <TextInput\n                      source=\"residential_address\"\n                      defaultValue={booking.residential_address}\n                      fullWidth onBlur={handleChange}\n                      multiline\n                    />\n                  </Grid>\n\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"occupation\"\n                      defaultValue={booking.occupation}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"nationality\"\n                      defaultValue={booking.nationality}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"client\"\n                      defaultValue={booking.client}\n                      fullWidth onBlur={handleChange}\n                    />\n                    </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"reference_off\"\n                      defaultValue={booking.reference_off}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"nominee_name\"\n                      defaultValue={booking.nominee_name}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"relation\"\n                      defaultValue={booking.relation}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"email\"\n                      defaultValue={booking.unit}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <BooleanInput\n                      source=\"active\"\n                      defaultValue={booking.active}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Button source=\"Booking\" />\n          </div>\n\n          <Toolbar>\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n              <Button label=\"Continue\" primary={true} onClick={this.continue} />\n            </Box>\n          </Toolbar>\n        </Box>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BookingDetailsForm;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js",["228","229"],"import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport { BookingsShow } from \"./booking\";\n\nexport class BookingPrint extends React.Component {\n  render() {\n    const { booking, schedule, step } = this.props;\n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => {\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n            // to the root node of the returned component as it will be overwritten.\n            return <a href=\"#/accounts\">Print this out!</a>;\n          }}\n          content={() => this.componentRef}\n        />\n        <BookingConfirm\n          booking={booking}\n          schedule={schedule}\n          step={3}\n          ref={(el) => (this.componentRef = el)}\n        />\n      </div>\n    );\n  }\n}\n\nexport class BookingConfirm extends React.Component {\n  continue = (e) => {\n    e.preventDefault();\n    //PROCESS FORM //\n    this.props.nextStep();\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { booking, schedule, step } = this.props;\n    // const classes = useStyles();\n\n    if (step == 3) {\n      return (\n        <Card>\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Booking Confirmation\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" gutterBottom align=\"right\">\n                  {/* <BookingPrint />  */}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12} container alignContent=\"flex-end\">\n                <Typography variant=\"h6\" gutterBottom>\n                  Booking Details\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>&nbsp;</div>\n            <Grid container display=\"flex\" spacing={2}>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Date : {new Date(booking.book_date).toLocaleDateString()}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  ID: {} {booking.id}\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Code: {booking.code}\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Scode: {booking.scode}\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Title: {booking.title}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Unit: {booking.unit}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Client: {booking.client}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Project: {booking.project}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Sale Price: {booking.sale_price}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Discount : {booking.discount}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Active : {booking.active}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Remarks : {booking.remarks}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Name : {booking.name}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Father's Name : {booking.father_name}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Residential Address : {booking.residential_address}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Phone Number : {booking.phone_no}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Occupation : {booking.occupation}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Nationality : {booking.nationality}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  CNIC : {booking.cnic}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Reference Of : {booking.reference_off}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Nominee's Name : {booking.nominee_name}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Realtion : {booking.relation}\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Email : {booking.email}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Schedule Confirmation\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  ID : {schedule.id}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Name : {schedule.name}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Date: {new Date(schedule.date).toLocaleDateString()}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Unit :{schedule.unit}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Type : {schedule.type}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  floor : {schedule.floor}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  block : {schedule.block}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Contact : {schedule.contact}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  total Cost : {schedule.total_cost}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Booking : {schedule.on_booking}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Allocation: {schedule.on_allocation}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Confirmation : {schedule.on_confirmation}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Monthly Installment : {schedule.monthly_installment}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Start : {schedule.on_start}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  Quaterly Payment : {schedule.quaterly_payment}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Excavation : {schedule.on_excavation}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Foundaiton : {schedule.on_foundation}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Slab : {schedule.on_slab}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Block : {schedule.on_block}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Plaster : {schedule.on_plaster}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Plumbing :{schedule.on_plumbing}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Coloring : {schedule.on_coloring}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Finishing: {schedule.on_finishing}\n                </Typography>\n\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\n                  On Possesion : {schedule.on_posession}\n                </Typography>\n                <BookingsShow>show</BookingsShow>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      );\n    } else return null;\n  }\n}\n\nexport default BookingConfirm;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js",["230"],"import { Box, Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { Button, DateInput, required, TextInput, Toolbar } from \"react-admin\";\nimport FirdousSelect from \"../accounts/FirdousSelect\";\nclass ScheduleForm extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { schedule, step, handleChange } = this.props;\n    const small = 6;\n    const xsmall = 12;\n    const medium = 6;\n    const styles = {\n      button: {\n        margin: 15,\n      },\n    };\n\n\n    const ra_required = [required()];\n    if (step == 2) {\n      return (\n        <Box p=\"1em\">\n          <Typography variant=\"h6\" gutterBottom>\n            Payment Schedule\n          </Typography>\n          <div>\n            <Grid container spacing={7}>\n              <Grid spacing={1} id=\"left-container\" item xs={xsmall} md={4}>\n                <Typography variant=\"h7\" gutterBottom>\n                  Details\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput disabled source=\"id\" fullWidth onBlur={handleChange} />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"name\"\n                      defaultValue={schedule.name}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <FirdousSelect\n                       margin=\"units\"\n                      label=\"units\"\n                    source=\"units\"\n                      optionText=\"title\"\n                    list=\"units\"\n                    sort=\"title\"\n                  validate={ra_required}\n                    fullWidth\n                          \n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"type\"\n                      defaultValue={schedule.type}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"block\"\n                      defaultValue={schedule.block}\n                      fullWidth onBlur={handleChange} /*options={{ multiLine: true }}*/\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput fullWidth onBlur={handleChange} multiline source=\"contact\" />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      fullWidth onBlur={handleChange}\n                      source=\"total_cost\"\n                      defaultValue={schedule.total_cost}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\n                    <DateInput\n                      source=\"on_booking\"\n                      defaultValue={schedule.on_booking}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_allocation\"\n                      defaultValue={schedule.on_allocation}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_confirmation\"\n                      defaultValue={schedule.on_confirmation}\n                      fullWidth onBlur={handleChange}\n                      multiline\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid spacing={1} id=\"right-container\" item xs={xsmall} md={4}>\n                <Typography variant=\"h7\" gutterBottom>\n                  Payment Details\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={xsmall} sm={small} md={medium} lg={medium}>\n                    <TextInput\n                      source=\"on_start\"\n                      defaultValue={schedule.on_start}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"monthly_installment\"\n                      defaultValue={schedule.monthly_installment}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"quaterly_payment\"\n                      defaultValue={schedule.quaterly_payment}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_excavation\"\n                      defaultValue={schedule.on_excavation}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_foundation\"\n                      defaultValue={schedule.on_foundation}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_slab\"\n                      defaultValue={schedule.on_slab}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_block\"\n                      defaultValue={schedule.on_block}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_plaster\"\n                      defaultValue={schedule.on_plaster}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_plumbing\"\n                      defaultValue={schedule.on_plumbing}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_electric\"\n                      defaultValue={schedule.on_electric}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_coloring\"\n                      defaultValue={schedule.on_coloring}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_finishing\"\n                      defaultValue={schedule.on_finishing}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={xsmall} sm={small} md={medium}>\n                    <TextInput\n                      source=\"on_possesion\"\n                      defaultValue={schedule.on_possesion}\n                      fullWidth onBlur={handleChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Button source=\"Schedule\" />\n          </div>\n\n          <Toolbar>\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n              <Button\n                label=\"Back\"\n                primary={false}\n                style={styles.button}\n                onClick={this.back}\n              />\n\n              <Button\n                label=\"Continue\"\n                primary={false}\n                style={styles.button}\n                onClick={this.continue}\n              />\n            </Box>\n          </Toolbar>\n        </Box>\n      );\n    }\n    return null;\n  }\n}\n\nexport default ScheduleForm;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingShow.js",["231","232","233","234","235"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useShowController } from 'react-admin';\nimport Booking from './BookingPrint';\n\nconst BookingsShow = props => {\n    const {\n        basePath, // deduced from the location, useful for action buttons\n        defaultTitle, // the translated title based on the resource, e.g. 'Post #123'\n        loaded, // boolean that is false until the record is available\n        loading, // boolean that is true on mount, and false once the record was fetched\n        record, // record fetched via dataProvider.getOne() based on the id from the location\n        resource, // the resource name, deduced from the location. e.g. 'posts'\n        version, // integer used by the refresh feature\n    } = useShowController(props);\n    console.log(record)\n    if (!loaded) {\n        return <CircularProgress />;\n    }\n    return (\n\n\n\n        <Booking\n            booking={{ ...record }}\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\n            //customer={{}}\n            company={{ \"name\": \"Firdous ERP\", \"logoUrl\": \"https://dummyimage.com/600x400/000/fff\" }}\n            notes={\"Here comes the Remarks\"}\n        />\n\n\n\n\n    );\n}\n\nexport default BookingsShow","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js",["236"],"import React, { Component } from \"react\";\nimport logo from \"../../assets/firdouslogo.png\";\nimport PurchaseOrder from \"./POPrint\";\n\nexport class PrintPOComponent extends Component {\n  render() {\n    const { record, loaded } = this.props;\n    if (record.id) {\n      console.log(logo);\n      return (\n        <div>\n          <PurchaseOrder\n            purchaseorder={{ ...record }}\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\n            //customer={{}}\n            company={{\n              name: \"Firdous ERP\",\n              logoUrl: logo,\n            }}\n            notes={\"Here comes the Remarks\"}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PrintPOComponent;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\sales\\Sales.js",["237","238"],"import { Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\nimport { AccountButton } from \"../accounts/Accounts\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  JournalVoucher: {\n    backgroundColor: \"#64b5f6\",\n    color: \"white\",\n    hover: {\n      color: \"red\",\n    },\n  },\n  PaymentVoucher: {\n    backgroundColor: \"#7b1fa2\",\n    color: \"white\",\n  },\n  SalesVoucher: {\n    backgroundColor: \"#aa00ff\",\n    color: \"white\",\n  },\n  RecieptVoucher: {\n    backgroundColor: \"#00897b\",\n    color: \"white\",\n  },\n  SalaryVoucher: {\n    backgroundColor: \"#ff5252\",\n    color: \"white\",\n  },\n}));\n\nfunction SimplePaper() {\n  const classes = useStyles();\n\n  return (\n    <Grid container display=\"flex\" spacing={2}>\n      <Grid item xs={12} sm={3}>\n        <Typography variant=\"h6\" gutterBottom>\n          Sales Menu\n        </Typography>\n        <Grid item xs={12}></Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/clients\"\n              label=\"Clients\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/booking\"\n              label=\"Bookings\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/booking\"\n              label=\"Bookings\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/schedule\"\n              label=\"Booking Schedules\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AccountButton\n              target=\"/invoices\"\n              label=\"Invoices\"\n              stylename={classes.JournalVoucher}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nconst Purchases = () => {\n  useAuthenticated();\n  const { loading, authenticated } = useAuthState();\n\n  return (\n    <Card>\n      <Title title=\"Purchases\" />\n      <CardContent>{SimplePaper()}</CardContent>\n    </Card>\n  );\n};\n\nexport default Purchases;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js",["239"],"import React, { Component } from \"react\";\nimport logo from \"../../assets/firdouslogo.png\";\nimport Voucher from \"./VoucherPrint\";\nexport class PrintVoucherComponent extends Component {\n  render() {\n    const { record, loaded } = this.props;\n    if (record.id) {\n      console.log(logo);\n      return (\n        <div>\n          <Voucher\n            voucher={{ ...record }}\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\n            //customer={{}}\n            company={{\n              name: \"Firdous ERP\",\n              logoUrl: logo,\n            }}\n            notes={\"Here comes the Remarks\"}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PrintVoucherComponent;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\BookingPrint.js",["240"],"//import { formatCurrency, formatDate } from \"./utils\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nexport function formatDate(date) {\n  return date\n}\n\nexport function formatCurrency(amount) {\n  return amount\n}\nconst styles = `\n.invoice-box{\n  max-width:800px;\n  margin:auto;\n  padding:30px;\n  border:1px solid #eee;\n  box-shadow:0 0 10px rgba(0, 0, 0, .15);\n  font-size:16px;\n  line-height:24px;\n  font-family:'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n  color:#555;\n}\n.invoice-box table{\n  width:100%;\n  line-height:inherit;\n  text-align:left;\n}\n.invoice-box table td{\n  padding:5px;\n  vertical-align:top;\n}\n.invoice-box table td td{\n  padding:0;\n}\n.invoice-box .voutype{\n  text-align:center;\n  vertical-align:top;\n  font-size:25px;\n  line-height:25px;\n  color:#333;\n}\n.invoice-box .bottomline{\n  margin-top:80px;\n}\n.invoice-box .footer {\n  border-top:1px solid grey;\n  text-align:center;\n}\n\n.invoice-box table tr td:nth-child(2){\n  text-align:right;\n}\n.invoice-box table tr td.refno{\n  text-align:left;\n}\n.invoice-box table tr.top table td{\n  padding-bottom:20px;\n}\n.invoice-box table tr.top table td.title{\n  font-size:35px;\n  line-height:35px;\n  color:#333;\n}\n.invoice-box table tr.information table td{\n  padding-bottom:40px;\n}\n.invoice-box table tr.information table td.information-column{\n  width:50%;\n}\n.invoice-box table table.invoice-information{\n  display:inline-block;\n  width:auto;\n}\n.invoice-box table table.invoice-information td:first-child{\n  padding-right:30px;\n}\n.invoice-box table tr.information table td td{\n  padding-bottom:0;\n}\n.invoice-box table tr.heading td{\n  background:#eee;\n  border-bottom:1px solid #ddd;\n  font-weight:bold;\n}\n.invoice-box table tr.details td{\n  padding-bottom:20px;\n}\n.invoice-box table tr.item td{\n  border-bottom:1px solid #eee;\n}\n.invoice-box table tr.item td.debit{\n  text-align:right;\n}\n.invoice-box table tr.heading td.credit{\n  text-align:right;\n}\n.invoice-box table tr.heading td.debit{\n  text-align:right;\n}\n.invoice-box table tr.item td.credit{\n  text-align:right;\n}\n.invoice-box table tr.item.last td{\n  border-bottom:none;\n}\n.invoice-box table tr.total td:nth-child(2){\n  background:#eee;\n  font-weight:bold;\n}\n.invoice-box .subheading {\n  font-weight: bold;\n  font-size: 14px;\n  text-transform: uppercase;\n}\n@media only screen and (max-width: 600px) {\n  .invoice-box table tr.top table td{\n    width:100%;\n    display:block;\n    text-align:center;\n  }\n  .invoice-box table tr.information table td{\n    width:100%;\n    display:block;\n    text-align:center;\n  }\n}\n@media print {\n  .invoice-box {\n    box-shadow: none;\n    border: 0;\n  }\n}\n`\n\nexport default function Booking({ booking, company, notes }) {\n  const { transactions } = booking;\n\n  const bookingName = booking.book_type || \"Booking\";\n\n  return (\n    <html lang={\"en_US\"}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <title>\n          {company.name} {bookingName}\n        </title>\n        <style dangerouslySetInnerHTML={{ __html: styles }} />\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\n      </head>\n      <body>\n        <div className=\"invoice-box\">\n          <table cellPadding=\"0\" cellSpacing=\"0\">\n            <tbody>\n              <tr className=\"top\">\n              <td colSpan=\"8\" > <div className=\"book_type\">{booking.book_type} <b>Firdous Residency</b></div></td>\n              </tr>\n              <tr className=\"top\">\n                <td colSpan=\"6\" >\n                  <table>\n                    <tbody>\n                      <tr>\n                      \n\n                        <td>\n\n                          <div>\n                          { <div>Booking  </div>}\n                            {booking.book_no && <div className=\"subheading\">Booking No # {booking.book_no}</div>}\n                            {booking.book_date && <div>Booking Date :{booking.book_date}</div>}\n                            {booking.project && <div>Project {booking.project}</div>}\n\n                          </div>\n                        </td>\n                        <td colSpan=\"1\"> <div className=\"book_type\">{booking.book_type} <b>  Al-   </b> <b>Makkah</b> <b>Associates</b></div></td>\n                        <td className=\"title\">\n                          <img\n                            src={company.logoUrl}\n                            style={{\n                              display: \"block\",\n                              width: \"auto\",\n                              height: \"auto\",\n                              maxWidth: \"200px\",\n                              maxHeight: \"100px\",\n                              marginLeft: \"auto\",\n                            }}\n                            alt={company.name}\n                          />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n              <tr className=\"information\">\n                <td colSpan=\"6\">\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td className=\"information-column\">\n                          <div className=\"subheading\">Allottee</div>\n                          {/* <EntityInfo entity={customer} /> */}\n                          <td className=\"subheading\"></td>\n                                  <td>{(booking.name)}</td>\n                                  <div>\n                                  <td>\n                                  <td>{(booking.phone_no)}</td>\n                                  </td>\n                                  </div>\n                                  <div>\n                                  <td>\n                                  <td>{(booking.cnic)}</td>\n                                  </td>\n                                  </div>\n                                  <div>\n                                  <td>\n                                  <td>{(booking.residential_address)}</td>\n                                  </td>\n                                  </div>\n                                 \n\n                                  \n                        </td>\n                        \n                        \n                        <td className=\"information-column\">\n                          <table className=\"invoice-information\">\n                            <tbody>\n                              <tr>\n                                <td className=\"subheading\">{\"Allottment\"} #</td>\n                                <td>{\"5\"}</td>\n                              </tr>\n                              {booking.sale_price && (\n                                <tr>\n                                  <td className=\"subheading\">Unit Type</td>\n                                  <td>{\"(1290sqfts)\"}</td>\n                                </tr>\n                              )}\n                               {booking.discount && (\n                                <tr>\n                                  <td className=\"subheading\">Unit No</td>\n                                  <td>{(\"A-102\")}</td>\n                                </tr>\n                              )}\n                              {booking.discount && (\n                                <tr>\n                                  <td className=\"subheading\">Discount</td>\n                                  <td>{(\"5%\")}</td>\n                                </tr>\n                              )}\n                              {booking.phone_no && (\n                                <tr>\n                                  <td className=\"subheading\">Total Installments</td>\n                                  <td>{(\"10\")}</td>\n                                </tr>\n                              )}\n                              {booking.cnic && (\n                                <tr>\n                                  <td className=\"subheading\">Installments Due</td>\n                                  <td>{\"5\"}</td>\n                                </tr>\n                              )}\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n           \n            {booking.remarks && [\n    \n                  \n              ]} \n              \n              \n              <tr className=\"total\">\n                <td />\n\n                <td colSpan={\"5\"}>\n                  <table>\n                    <tbody>\n                      <tr>\n                      \n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n              {booking.description && [\n                <tr className=\"heading\" key=\"heading\">\n                  <td className=\"subheading\" colSpan=\"6\">\n                    Installment\n                  </td>\n                </tr>,\n                <tr className=\"details\" key=\"details\">\n                  <td colSpan=\"6\">{booking.description}</td>\n                </tr>,\n              ]} \n              <tr className=\"heading\">\n                <td className=\"subheading\">Sr.no</td>\n                <td className=\"name\"> unit type.</td>\n                <td> Area</td>\n                <td> Unit Cost</td>\n                <td className=\"phone_no\">Booking Amount</td>\n                <td className=\"occupation\">Amount remaining</td>\n\n              </tr>\n              {}  <tr className=\"item\" key={booking.description}>\n                  <td className=\"subheading\"  >{\"1\"}</td>\n                  <td>{booking.name}</td>\n                  <td>{booking.father_name}</td>\n                  <td>{booking.residential_address}</td>\n\n                  <td className=\"Phone Number\">{(booking.phone_no)}</td>\n                  <td className=\"occupation\">{(booking.occupation)}</td>\n                </tr>\n              \n              <tr className=\"total\">\n                <td />\n\n                <td colSpan={\"5\"}>\n                  <table>\n                    <tbody>\n                      <tr>\n                      \n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n              <tr className=\"heading\">\n                <td className=\"subheading\"></td>\n                <td className=\"name\"> </td>\n                <td> </td>\n                <td>  </td>\n                <td className=\"phone_no\"></td>\n                <td className=\"occupation\"></td>\n\n              </tr>\n              {}  <tr className=\"item\" key={booking.description}>\n                  <td className=\"subheading\"  >{\"2\"}</td>\n                  <td>{booking.name}</td>\n                  <td>{booking.father_name}</td>\n                  <td>{booking.residential_address}</td>\n\n                  <td className=\"Phone Number\">{(booking.phone_no)}</td>\n                  <td className=\"occupation\">{(booking.occupation)}</td>\n                </tr>\n              \n              <tr className=\"total\">\n                <td />\n\n                <td colSpan={\"5\"}>\n                  <table>\n                    <tbody>\n                      <tr>\n                      \n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            \n            </tbody>\n          </table>\n          {notes && (\n            <div style={{ marginTop: 30 }}>\n              <div className=\"\">Remarks: {notes}</div>\n\n            </div>\n          )}\n          <div className=\"bottomline\">\n            <table cellPadding=\"0\" cellSpacing=\"0\">\n              <tbody>\n                <tr className=\"footer\">\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Prepared By</div></td>\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Checked By</div></td>\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Senctioned By</div></td>\n                  <td colSpan=\"2\" > <div className=\"footer\">{booking.book_type} Signature By</div></td>\n                 \n                </tr>\n              </tbody>\n            </table>\n          </div>\n          \n        </div>\n      </body>\n    </html >\n  );\n}\n\nBooking.propTypes = {\n  company: PropTypes.shape({\n    name: PropTypes.string,\n    logoUrl: PropTypes.string,\n  }).isRequired,\n  booking: PropTypes.shape({\n    book_no: PropTypes.string,\n    book_date: PropTypes.string,\n    book_type: PropTypes.string,\n    project: PropTypes.string,\n    sale_price: PropTypes.string,\n    discount: PropTypes.string,\n    father_name: PropTypes.string,\n    client: PropTypes.string,\n    phone_no: PropTypes.string,\n    occupation: PropTypes.string,\n    reference_off: PropTypes.string,\n    nationality: PropTypes.string,\n    nominee_name: PropTypes.string,\n    relation: PropTypes.string,\n    residential_address: PropTypes.string,\n    cnic: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    description: PropTypes.string,\n    remarks: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n\n  lang: PropTypes.string,\n  notes: PropTypes.node,\n};\n\nBooking.defaultProps = {\n  lang: \"en_US\",\n  notes: null,\n};\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\POPrint.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\coa.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\coa_type.js",["241","242"],"import { useMediaQuery } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport * as React from \"react\";\nimport { Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar } from 'react-admin';\n\nexport const Coa_typeIcon = FormatListNumberedIcon;\n\nexport const Coa_typeActions = ({ basePath, data }) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n        {/* <ShowButton basePath={basePath} record={data} /> */}\n    </TopToolbar>\n);\n\nconst Coa_typeSearchFilter = (props) => (\n\n    <Filter {...props}>\n        <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\n        <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\n        <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\n    </Filter>\n\n);\n\nexport const Coa_typeList = props => (\n    <List filters={<Coa_typeSearchFilter />} {...props}>\n        {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\n            <SimpleList\n                primaryText={record => record.title}\n                secondaryText={record => `${record.code}`}\n                tertiaryText={record => record.id}\n\n            />\n        ) : (\n                <Datagrid rowClick=\"edit\">\n                    <TextField source=\"id\" />\n                    <TextField source=\"code\" />\n                    <TextField source=\"title\" />\n                    <EditButton variant=\"contained\" color=\"secondary\" />\n                    <DeleteButton />\n                </Datagrid>)}\n    </List>\n);\n\nconst Coa_typeTitle = ({ record }) => {\n    return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const Coa_typeEdit = (props) => (\n    <Edit undoable={false}  title={<Coa_typeTitle />} {...props}>\n        <SimpleForm variant=\"standard\" margin=\"none\"    >\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"code\" />\n            <TextInput multiline source=\"title\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const Coa_typeCreate = (props) => (\n    <Create  title=\"New Coa_type\" {...props}>\n        <SimpleForm variant=\"standard\">\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"code\" />\n            <TextInput multiline source=\"title\" />\n        </SimpleForm>\n    </Create>\n);","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\custom\\CustomMenu.js",["243","244"],"import { useMediaQuery } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport DefaultIcon from \"@material-ui/icons/ViewList\";\nimport * as React from \"react\";\nimport { DashboardMenuItem, getResources, MenuItemLink } from \"react-admin\";\nimport { useSelector } from \"react-redux\";\n\nconst Menu = ({ onMenuClick, logout }) => {\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  const resources = useSelector(getResources);\n  return (\n    <div className=\"firdousmenu\">\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <Divider light />\n      <MenuItemLink\n        to=\"/accounts\"\n        primaryText=\"Accounts\"\n        leftIcon={<AccountBalanceWalletIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n      <Divider light />\n      <MenuItemLink\n        to=\"/purchases\"\n        primaryText=\"Purchases\"\n        leftIcon={<ShoppingCartIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n\n      <Divider light />\n      <MenuItemLink\n        to=\"/sales\"\n        primaryText=\"Sales\"\n        leftIcon={<AttachMoneyIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n\n      {resources.map((resource) => {\n        if (resource.options && resource.options.menu === \"false\") {\n          //console.log(resource);\n          return;\n        } else if (resource.hasList) {\n          return (\n            <div>\n              <MenuItemLink\n                key={resource.name}\n                to={`/${resource.name}`}\n                primaryText={\n                  (resource.options && resource.options.label) || resource.name\n                }\n                leftIcon={resource.icon ? <resource.icon /> : <DefaultIcon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n              />\n              <Divider light />\n            </div>\n          );\n        }\n      })}\n\n      <Divider light />\n      <MenuItemLink\n        to=\"/custom-route\"\n        primaryText=\"Miscellaneous\"\n        leftIcon={<LabelIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n      <MenuItemLink\n        to=\"/help-center\"\n        primaryText=\"Settings\"\n        leftIcon={<SettingsIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n      {isXSmall && logout}\n    </div>\n  );\n};\n\nexport default Menu;\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\custom\\customRoutes.js",["245"],"import * as React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Accounts from \"../accounts/Accounts\";\nimport Purchases from \"../purchases/Purchases\";\nimport Sales from \"../sales/Sales\";\n\nexport default [\n  <Route exact path=\"/accounts\" component={Accounts} />,\n  <Route exact path=\"/purchases\" component={Purchases} />,\n  <Route exact path=\"/sales\" component={Sales} />,\n  //<Route exact path=\"/accounts/vouchers/create\" component={VoucherEntry} />,\n  //<Route exact path=\"/accounts/voucherentry/:id\" component={VoucherEdit} />,\n  //<Route exact path=\"/userform\" component={Userform} />,\n  //<Route exact path=\"/bookingform\" component={BookingFormWizard} />,\n];\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\purchases\\grn.js",["246","247","248"],"import { Grid, useMediaQuery } from \"@material-ui/core\";\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport * as React from \"react\";\nimport {\n  Create,\n  Datagrid,\n  DateInput,\n  DeleteButton,\n  Edit,\n  EditButton,\n  Filter,\n  List,\n  ListButton,\n  NumberInput,\n  SearchInput,\n  SimpleForm,\n  SimpleList,\n  TextField,\n  TextInput,\n  TopToolbar,\n  useNotify,\n  useRedirect,\n  useRefresh,\n} from \"react-admin\";\n\nexport const GrnIcon = ApartmentIcon;\n\nexport const GrnActions = ({ basePath, data }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n    {/* <ShowButton basePath={basePath} record={data} /> */}\n  </TopToolbar>\n);\n\nconst GrnSearchFilter = (props) => (\n  <Filter {...props}>\n    <SearchInput\n      variant=\"standard\"\n      placeholder=\"Title\"\n      source=\"title\"\n      alwaysOn\n    />\n    <SearchInput\n      variant=\"standard\"\n      placeholder=\"SCode\"\n      source=\"scode\"\n      alwaysOn\n    />\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\n  </Filter>\n);\n\nexport const GrnList = (props) => (\n  <List empty={false} filters={<GrnSearchFilter />} {...props}>\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\n      <SimpleList\n        primaryText={(record) => record.title}\n        secondaryText={(record) => `${record.code}`}\n        tertiaryText={(record) => record.id}\n      />\n    ) : (\n      <Datagrid rowClick=\"edit\">\n        <TextField source=\"id\" />\n        <TextField source=\"grn_no\" />\n        <TextField source=\"grn_date\" />\n        <TextField source=\"po_id\" />\n        <TextField source=\"created_on\" />\n        <TextField source=\"created_by\" />\n        <TextField source=\"ref_no\" />\n        <TextField source=\"remarks\" />\n        <EditButton variant=\"contained\" color=\"secondary\" />\n        <DeleteButton />\n      </Datagrid>\n    )}\n  </List>\n);\n\nconst GrnTitle = ({ record }) => {\n  return <span>Grn {record ? `\"${record.title}\"` : \"\"}</span>;\n};\n\nexport const GrnEdit = (props) => (\n  <Edit undoable={false} title={<GrnTitle />} {...props}>\n    <SimpleForm\n      variant={\"standard\"}\n      sanitizeEmptyValues={false}\n      margin=\"none\"\n      fullWidth\n    >\n      <Grid container display=\"flex\" fullWidth spacing={1}>\n        <Grid item xs={12} md={4}>\n          <TextInput disabled source=\"id\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"grn_no\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <DateInput source=\"grn_date\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <NumberInput multiline source=\"po_id\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <DateInput source=\"created_on\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"created by\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"ref_no\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <TextInput source=\"remarks\" fullWidth />\n        </Grid>\n      </Grid>\n    </SimpleForm>\n  </Edit>\n);\n\nexport const GrnCreate = (props) => {\n  const notify = useNotify();\n  const refresh = useRefresh();\n  const redirect = useRedirect();\n  const onFailure = (error) => {\n    notify(`Could not edit post: ${error}`);\n  };\n\n  return (\n    <Create title=\"New Grn\" {...props}>\n      <SimpleForm\n        variant={\"standard\"}\n        sanitizeEmptyValues={false}\n        margin=\"none\"\n        fullWidth\n      >\n        <Grid container display=\"flex\" fullWidth spacing={1}>\n          <Grid item xs={12} md={4}>\n            <TextInput disabled source=\"id\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"grn_no\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <DateInput source=\"grn_date\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <NumberInput multiline source=\"po_id\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <DateInput source=\"created_on\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"created by\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"ref_no\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"remarks\" fullWidth />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextInput source=\"status\" fullWidth />\n          </Grid>\n        </Grid>\n      </SimpleForm>\n    </Create>\n  );\n};\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\notes.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\accounts\\vouchers.js",["249","250"],"import { useMediaQuery } from \"@material-ui/core\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport * as React from \"react\";\nimport {\n  Create,\n  Datagrid,\n  DateInput,\n  Edit,\n  EditButton,\n  Filter,\n  List,\n  ListButton,\n  Pagination,\n  SearchInput,\n  SimpleList,\n  TextField,\n  TopToolbar,\n} from \"react-admin\";\nimport { useLocation } from \"react-router\";\nimport FirdousSelect from \"./FirdousSelect\";\nimport { VoucherEntryForm } from \"./VoucherEntry3\";\nimport VoucherShow from \"./VoucherShow\";\n\nexport const useQuery = (queryParam) => {\n  const search = new URLSearchParams(useLocation().search);\n  return search.get(queryParam);\n};\n\nexport const VouchersIcon = StoreIcon;\n\nexport const VouchersActions = ({ basePath, data }) => (\n  <TopToolbar>\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n    {/* <ShowButton basePath={basePath} record={data} /> */}\n  </TopToolbar>\n);\n\nconst VouchersSearchFilter = (props) => (\n  <Filter {...props}>\n    <SearchInput\n      variant=\"standard\"\n      placeholder=\"Voucher-No\"\n      source=\"vou_no\"\n      alwaysOn\n    />\n\n    <DateInput\n      variant=\"standard\"\n      placeholder=\"Voucher Date\"\n      source=\"vou_date\"\n      resettable\n      alwaysOn\n    />\n    <SearchInput\n      variant=\"standard\"\n      placeholder=\"Chq-No\"\n      source=\"chq_no\"\n      alwaysOn\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Project\"\n      source=\"project\"\n      optionText=\"title\"\n      list=\"projects\"\n      sort=\"title\"\n      resettable\n      alwaysOn\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Vendor\"\n      source=\"supplier\"\n      optionText=\"title\"\n      list=\"suppliers\"\n      sort=\"title\"\n      resettable\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Units\"\n      source=\"unit\"\n      optionText=\"title\"\n      list=\"units\"\n      sort=\"title\"\n      resettable\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Stocks\"\n      source=\"stock\"\n      optionText=\"title\"\n      list=\"stock\"\n      sort=\"title\"\n      resettable\n    />\n    <FirdousSelect\n      variant=\"standard\"\n      label=\"Employees\"\n      source=\"employee\"\n      optionText=\"title\"\n      list=\"employees\"\n      sort=\"title\"\n      resettable\n    />\n  </Filter>\n);\nconst PostPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\n);\n\nexport const VouchersList = (props) => (\n  <List\n    sort={{ field: \"id\", order: \"DESC\" }}\n    perPage={25}\n    pagination={<PostPagination />}\n    empty={false}\n    filters={<VouchersSearchFilter />}\n    {...props}\n  >\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\n      <SimpleList\n        primaryText={(record) => record.title}\n        secondaryText={(record) => `${record.code}`}\n        tertiaryText={(record) => record.id}\n      />\n    ) : (\n      <Datagrid rowClick=\"edit\">\n        <TextField source=\"row_id\" />\n        <TextField source=\"vou_no\" />\n        <TextField source=\"vou_date\" />\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\n          <TextField source=\"title\" />\n        </ReferenceField> */}\n        <TextField source=\"chq_no\" />\n        <TextField source=\"chq_date\" />\n        <TextField source=\"created_by\" />\n        <EditButton variant=\"contained\" color=\"secondary\" />\n        {/* <DeleteButton /> */}\n      </Datagrid>\n    )}\n  </List>\n);\n\nconst VouchersTitle = ({ record }) => {\n  return <span>Voucher {record ? `\"${record.vou_no}\"` : \"\"}</span>;\n};\nexport const VouchersEdit = (props) => {\n  return (\n    <Edit\n      undoable={false}\n      actions={null}\n      title={<VouchersTitle />}\n      redirect=\"show\"\n      {...props}\n    >\n      <VoucherEntryForm {...props} />\n    </Edit>\n  );\n};\n\nexport const VouchersCreate = (props) => {\n  const vou_type = useQuery(\"vou_type\");\n  return (\n    <Create redirect=\"show\" undoable={false} title=\"New Voucher\" {...props}>\n      <VoucherEntryForm vou_type={vou_type} {...props} />\n    </Create>\n  );\n};\n\nexport const VouchersShow = (props) => {\n  return <VoucherShow {...props} />;\n};\n\nconst dateFormatter = (v) => {\n  // v is a `Date` object\n  if (!(v instanceof Date) || isNaN(v)) return;\n  const pad = \"00\";\n  const yy = v.getFullYear().toString();\n  const mm = (v.getMonth() + 1).toString();\n  const dd = v.getDate().toString();\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\n};\n\nconst dateParser = (v) => {\n  // v is a string of \"YYYY-MM-DD\" format\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\n  if (match === null) return;\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\n  if (isNaN(d)) return;\n  return d;\n};\n","C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\settings\\Fprop.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\inventory\\stock.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\bookings\\schedule.js",[],"C:\\Users\\aziz.rehman\\projects\\firdouserp\\firdouserp\\frontend\\src\\app\\components\\payroll\\employees.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":277,"column":9,"nodeType":"257","messageId":"258","endLine":277,"endColumn":16},{"ruleId":"255","severity":1,"message":"259","line":286,"column":10,"nodeType":"257","messageId":"258","endLine":286,"endColumn":19},{"ruleId":"255","severity":1,"message":"260","line":329,"column":7,"nodeType":"257","messageId":"258","endLine":329,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":10,"column":1,"nodeType":"263","endLine":24,"endColumn":3},{"ruleId":"255","severity":1,"message":"264","line":113,"column":9,"nodeType":"257","messageId":"258","endLine":113,"endColumn":16},{"ruleId":"255","severity":1,"message":"265","line":114,"column":9,"nodeType":"257","messageId":"258","endLine":114,"endColumn":17},{"ruleId":"255","severity":1,"message":"266","line":115,"column":9,"nodeType":"257","messageId":"258","endLine":115,"endColumn":18},{"ruleId":"255","severity":1,"message":"267","line":8,"column":7,"nodeType":"257","messageId":"258","endLine":8,"endColumn":16},{"ruleId":"268","severity":1,"message":"269","line":105,"column":32,"nodeType":"270","endLine":105,"endColumn":62},{"ruleId":"255","severity":1,"message":"271","line":141,"column":7,"nodeType":"257","messageId":"258","endLine":141,"endColumn":17},{"ruleId":"255","severity":1,"message":"272","line":150,"column":7,"nodeType":"257","messageId":"258","endLine":150,"endColumn":20},{"ruleId":"268","severity":1,"message":"273","line":164,"column":33,"nodeType":"270","endLine":164,"endColumn":56},{"ruleId":"255","severity":1,"message":"274","line":259,"column":7,"nodeType":"257","messageId":"258","endLine":259,"endColumn":17},{"ruleId":"255","severity":1,"message":"275","line":268,"column":7,"nodeType":"257","messageId":"258","endLine":268,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":7,"column":9,"nodeType":"270","endLine":7,"endColumn":78},{"ruleId":"255","severity":1,"message":"278","line":7,"column":5,"nodeType":"257","messageId":"258","endLine":7,"endColumn":13},{"ruleId":"255","severity":1,"message":"279","line":8,"column":5,"nodeType":"257","messageId":"258","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"280","line":10,"column":5,"nodeType":"257","messageId":"258","endLine":10,"endColumn":12},{"ruleId":"255","severity":1,"message":"281","line":12,"column":5,"nodeType":"257","messageId":"258","endLine":12,"endColumn":13},{"ruleId":"255","severity":1,"message":"282","line":13,"column":5,"nodeType":"257","messageId":"258","endLine":13,"endColumn":12},{"ruleId":"255","severity":1,"message":"280","line":142,"column":11,"nodeType":"257","messageId":"258","endLine":142,"endColumn":18},{"ruleId":"255","severity":1,"message":"283","line":142,"column":20,"nodeType":"257","messageId":"258","endLine":142,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":95,"column":23,"nodeType":"286","messageId":"287","endLine":95,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":99,"column":58,"nodeType":"286","messageId":"287","endLine":99,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":102,"column":43,"nodeType":"290","messageId":"291","endLine":102,"endColumn":45},{"ruleId":"255","severity":1,"message":"272","line":118,"column":7,"nodeType":"257","messageId":"258","endLine":118,"endColumn":20},{"ruleId":"255","severity":1,"message":"271","line":128,"column":7,"nodeType":"257","messageId":"258","endLine":128,"endColumn":17},{"ruleId":"255","severity":1,"message":"280","line":90,"column":11,"nodeType":"257","messageId":"258","endLine":90,"endColumn":18},{"ruleId":"255","severity":1,"message":"283","line":90,"column":20,"nodeType":"257","messageId":"258","endLine":90,"endColumn":33},{"ruleId":"255","severity":1,"message":"292","line":17,"column":11,"nodeType":"257","messageId":"258","endLine":17,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":24,"column":14,"nodeType":"286","messageId":"287","endLine":24,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":44,"column":55,"nodeType":"295","endLine":44,"endColumn":76},{"ruleId":"255","severity":1,"message":"296","line":11,"column":32,"nodeType":"257","messageId":"258","endLine":11,"endColumn":36},{"ruleId":"284","severity":1,"message":"285","line":48,"column":14,"nodeType":"286","messageId":"287","endLine":48,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":28,"column":14,"nodeType":"286","messageId":"287","endLine":28,"endColumn":16},{"ruleId":"255","severity":1,"message":"278","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":17},{"ruleId":"255","severity":1,"message":"279","line":8,"column":9,"nodeType":"257","messageId":"258","endLine":8,"endColumn":21},{"ruleId":"255","severity":1,"message":"280","line":10,"column":9,"nodeType":"257","messageId":"258","endLine":10,"endColumn":16},{"ruleId":"255","severity":1,"message":"281","line":12,"column":9,"nodeType":"257","messageId":"258","endLine":12,"endColumn":17},{"ruleId":"255","severity":1,"message":"282","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":16},{"ruleId":"255","severity":1,"message":"297","line":7,"column":21,"nodeType":"257","messageId":"258","endLine":7,"endColumn":27},{"ruleId":"255","severity":1,"message":"280","line":97,"column":11,"nodeType":"257","messageId":"258","endLine":97,"endColumn":18},{"ruleId":"255","severity":1,"message":"283","line":97,"column":20,"nodeType":"257","messageId":"258","endLine":97,"endColumn":33},{"ruleId":"255","severity":1,"message":"297","line":6,"column":21,"nodeType":"257","messageId":"258","endLine":6,"endColumn":27},{"ruleId":"255","severity":1,"message":"298","line":136,"column":11,"nodeType":"257","messageId":"258","endLine":136,"endColumn":23},{"ruleId":"268","severity":1,"message":"299","line":27,"column":20,"nodeType":"270","endLine":27,"endColumn":44},{"ruleId":"268","severity":1,"message":"300","line":51,"column":36,"nodeType":"270","endLine":51,"endColumn":53},{"ruleId":"288","severity":1,"message":"301","line":46,"column":33,"nodeType":"290","messageId":"302","endLine":46,"endColumn":35},{"ruleId":"288","severity":1,"message":"289","line":49,"column":11,"nodeType":"303","messageId":"304","endLine":49,"endColumn":18},{"ruleId":"261","severity":1,"message":"305","line":7,"column":1,"nodeType":"263","endLine":15,"endColumn":3},{"ruleId":"255","severity":1,"message":"264","line":123,"column":9,"nodeType":"257","messageId":"258","endLine":123,"endColumn":16},{"ruleId":"255","severity":1,"message":"265","line":124,"column":9,"nodeType":"257","messageId":"258","endLine":124,"endColumn":17},{"ruleId":"255","severity":1,"message":"266","line":125,"column":9,"nodeType":"257","messageId":"258","endLine":125,"endColumn":18},{"ruleId":"255","severity":1,"message":"272","line":176,"column":7,"nodeType":"257","messageId":"258","endLine":176,"endColumn":20},{"ruleId":"255","severity":1,"message":"271","line":186,"column":7,"nodeType":"257","messageId":"258","endLine":186,"endColumn":17},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Copyright' is defined but never used.","'i18nProvider' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'refresh' is assigned a value but never used.","'redirect' is assigned a value but never used.","'onFailure' is assigned a value but never used.","'useStyles' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Purchase_orderSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'dateParser' is assigned a value but never used.","'dateFormatter' is assigned a value but never used.","Imported JSX component Purchase_orderTitle must be in PascalCase or SCREAMING_SNAKE_CASE","'toCurrency' is assigned a value but never used.","'fromCurrency' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'basePath' is assigned a value but never used.","'defaultTitle' is assigned a value but never used.","'loading' is assigned a value but never used.","'resource' is assigned a value but never used.","'version' is assigned a value but never used.","'authenticated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'styles' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'step' is assigned a value but never used.","'loaded' is assigned a value but never used.","'transactions' is assigned a value but never used.","Imported JSX component Coa_typeSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Coa_typeTitle must be in PascalCase or SCREAMING_SNAKE_CASE","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]